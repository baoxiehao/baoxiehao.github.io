<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[浩然也空的博客]]></title>
  <subtitle><![CDATA[淡静良觉之地]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://baoxiehao.com/"/>
  <updated>2015-02-03T06:39:28.794Z</updated>
  <id>http://baoxiehao.com/</id>
  
  <author>
    <name><![CDATA[浩然也空]]></name>
    <email><![CDATA[baoxiehao@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/02/03/Learn%20to%20Code%20HTML%20&%20CSS%208/"/>
    <id>http://baoxiehao.com/2015/02/03/Learn to Code HTML & CSS 8/</id>
    <published>2015-02-03T06:14:00.000Z</published>
    <updated>2015-02-03T06:16:58.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_8:_Creating_Lists"><a href="http://learn.shayhowe.com/html-css/creating-lists/" target="_blank" rel="external">Lesson 8: Creating Lists</a></h1>
<a id="more"></a>

<p>When we want to use a list on a website, HTML provides three different types to choose from: <strong>unordered</strong>, <strong>ordered</strong>, and <strong>description</strong> lists. Choosing which type of list to use—or whether to use a list at all—comes down to the content and the most semantically appropriate option for displaying that content.</p>
<p>In addition to the three different types of lists available within HTML, there are multiple ways to style these lists with CSS. For example, we can choose what type of marker to use on a list. The marker could be square, round, numeric, alphabetical, or perhaps nonexistent. Also, we can decide if a list should be displayed vertically or horizontally. All of these choices play significant roles in the styling of our web pages.</p>
<h2 id="Unordered_Lists">Unordered Lists</h2>
<p>An unordered list is simply a list of related items whose order does not matter. Creating an unordered list in HTML is accomplished using the unordered list block-level element, <code>&lt;ul</code>&gt;. Each item within an unordered list is individually marked up using the list item element, <code>&lt;li</code>&gt;.</p>
<p>By default, most browsers add a vertical margin and left padding to the <code>&lt;ul</code>&gt; element and precede each <code>&lt;li</code>&gt; element with a solid dot. This solid dot is called the list item marker, and it can be changed using CSS.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Orange<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Green<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Blue<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Ordered_Lists">Ordered Lists</h2>
<p>The ordered list element, <code>&lt;ol</code>&gt;, works very much like the unordered list element; individual list items are created in the same manner. The main difference between an ordered list and an unordered list is that with an ordered list, the order in which items are presented is important. Because the order matters, instead of using a dot as the default list item marker, an ordered list uses numbers.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ol</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Head north on N Halsted St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn right on W Diversey Pkwy<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn left on N Orchard St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ol</span>&gt;</span></div></pre></td></tr></table></figure>

<p>Ordered lists also have unique attributes available to them including <strong>start</strong> and <strong>reversed</strong>.</p>
<h3 id="Start_Attribute">Start Attribute</h3>
<p>The start attribute defines the number from which an ordered list should start. By default, ordered lists start at 1. However, there may be cases where a list should start at 30 or another number. When we use the start attribute on the <code>&lt;ol</code>&gt; element, we can identify exactly which number an ordered list should begin counting from. The start attribute accepts only <strong>integer</strong> values, even though ordered lists may use different numbering systems, such as roman numerals.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ol</span> <span class="attribute">start</span>=<span class="value">"30"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Head north on N Halsted St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn right on W Diversey Pkwy<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn left on N Orchard St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ol</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Reversed_Attribute">Reversed Attribute</h3>
<p>The reversed attribute, when used on the <code>&lt;ol</code>&gt; element, allows a list to appear in reverse order. An ordered list of five items numbered 1 to 5 may be reversed and ordered from 5 to 1. The reversed attribute is a <strong>Boolean</strong> attribute, and as such it doesn’t accept any value. </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ol</span> <span class="attribute">reversed</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Head north on N Halsted St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn right on W Diversey Pkwy<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn left on N Orchard St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ol</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Value_Attribute">Value Attribute</h3>
<p>The value attribute may be used on an individual <code>&lt;li</code>&gt; element within an ordered list to change its value within the list. The number of any list item appearing below a list item with a value attribute will be recalculated accordingly.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ol</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Head north on N Halsted St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span> <span class="attribute">value</span>=<span class="value">"9"</span>&gt;</span>Turn right on W Diversey Pkwy<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Turn left on N Orchard St<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ol</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Description_Lists">Description Lists</h2>
<p>Another type of list seen online (but not as often as unordered or ordered lists) is the description list. Description lists are used to outline multiple terms and their descriptions, as in a glossary, for example.</p>
<p>Creating a description list in HTML is accomplished using the description list block-level element, <code>&lt;dl</code>&gt;. Instead of using a <code>&lt;li</code>&gt; element to mark up list items, the description list requires two block-level elements: the <strong>description term</strong> element, <code>&lt;dt</code>&gt;, and the <strong>description element</strong>, <code>&lt;dd</code>&gt;.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">dl</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">dt</span>&gt;</span>study<span class="tag">&lt;/<span class="title">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">dd</span>&gt;</span>The devotion of time and attention to acquiring knowledge on an academic subject, especially by means of books<span class="tag">&lt;/<span class="title">dd</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">dt</span>&gt;</span>design<span class="tag">&lt;/<span class="title">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">dd</span>&gt;</span>A plan or drawing produced to show the look and function or workings of a building, garment, or other object before it is built or made<span class="tag">&lt;/<span class="title">dd</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">dd</span>&gt;</span>Purpose, planning, or intention that exists or is thought to exist behind an action, fact, or material object<span class="tag">&lt;/<span class="title">dd</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">dt</span>&gt;</span>business<span class="tag">&lt;/<span class="title">dt</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">dt</span>&gt;</span>work<span class="tag">&lt;/<span class="title">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">dd</span>&gt;</span>A person's regular occupation, profession, or trade<span class="tag">&lt;/<span class="title">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">dl</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Nesting_Lists">Nesting Lists</h2>
<p>One feature that makes lists extremely powerful is their ability to be nested. Every list may be placed within another list; they can be nested continually. But the potential to nest lists indefinitely doesn’t provide free rein to do so. Lists should still be reserved specifically for where they hold the most semantic value.</p>
<p>One trick with nesting lists is to know where to begin and end each list and list item. Speaking specifically about unordered and ordered lists, as that is where most nesting will occur, the only element that may reside directly within the <code>&lt;ul</code>&gt; and <code>&lt;ol</code>&gt; elements is the <code>&lt;li</code>&gt; element. To repeat, the only element we can place as a direct child of the <code>&lt;ul</code>&gt; and <code>&lt;ol</code>&gt; elements is the <code>&lt;li</code>&gt; element. That said, once inside the <code>&lt;li</code>&gt; element, the standard set of elements may be added, including any <code>&lt;ul</code>&gt; or <code>&lt;ol</code>&gt; elements.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ol</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Walk the dog<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Fold laundry<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span></div><div class="line">    Go to the grocery and buy:</div><div class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Bread<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Cheese<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Mow the lawn<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">li</span>&gt;</span>Make dinner<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ol</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="List_Item_Styling">List Item Styling</h2>
<p>Unordered and ordered lists use list item markers by default. For unordered lists these are typically solid dots, while ordered lists typically use numbers. <a href="http://www.smashingmagazine.com/2009/12/11/styling-html-lists-with-css-techniques-and-resources/" target="_blank" rel="external">With CSS</a> the style and position of these list item markers may be adjusted.</p>
<h3 id="List_Style_Type_Property">List Style Type Property</h3>
<p>The list-style-type property is used to set the content of a list item marker. The <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type" target="_blank" rel="external">available values</a> <strong>range from squares and decimal numbers all the way to Armenian numbering</strong>, and the style may be placed on either the <code>&lt;ul</code>&gt;, <code>&lt;ol</code>&gt;, or <code>&lt;li</code>&gt; elements within CSS.</p>
<p>Any list-style-type property value can be added to <strong>either unordered or ordered</strong> lists. With this in mind, it is possible to use a numeric list item marker on an unordered list and a nonnumeric marker on an ordered list.</p>
<h3 id="Using_an_Image_as_a_List_Item_Marker">Using an Image as a List Item Marker</h3>
<p>There may come a time when the default list-style-type property values are not enough, and we want to customize our own list item marker. Doing so is most commonly accomplished by placing a background image on each <code>&lt;li</code>&gt; element within a list.</p>
<p>The process includes removing any default list-style-type property value and adding a background image and padding to the <code>&lt;li</code>&gt; element.</p>
<p>In detail, the list-style-type property value of none will remove existing list item markers. The background property will identify a background image, along with its position and repeat value, if necessary. And the padding property will provide space to the left of the text for the background image.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">li</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(<span class="string">"arrow.png"</span>) <span class="number">0</span> <span class="number">50%</span> no-repeat</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">list-style-type</span>:<span class="value"> none</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">12px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h3 id="List_Style_Position_Property">List Style Position Property</h3>
<p>By default the list item marker is to the left of the content within the <code>&lt;li</code>&gt; element. This list style positioning is described as outside, meaning all of the content will appear directly to the right, outside of the list item marker. Using the list-style-position property, we can change the default value of <strong>outside</strong> to <strong>inside</strong> or <strong>inherit</strong>.</p>
<h3 id="Shorthand_List_Style_Property">Shorthand List Style Property</h3>
<p>The list style properties discussed thus far, list-style-type and list-style-position, can be combined into one shorthand <strong>list-style</strong> property value. When using the list-style property, we can use <strong>one or all</strong> list style property values at a time.</p>
<h2 id="Horizontally_Displaying_List">Horizontally Displaying List</h2>
<p>Occasionally we may want to display lists horizontally rather than vertically. Perhaps we want to divide a list into multiple columns, to build a navigational list, or to put a few list items in a single row. Depending on the content and desired appearance, there are a few different ways to display lists as a single line, such as by making the display property value of <code>&lt;li</code>&gt; elements <strong>inline</strong> or <strong>inline-block</strong> or by <strong>floating</strong> them.</p>
<h3 id="Displaying_List">Displaying List</h3>
<p>The quickest way to display a list on a single line is to give the <code>&lt;li</code>&gt; elements a display property value of inline or inline-block. Doing so places all the <code>&lt;li</code>&gt; elements within a single line, with a single space between each list item. When changing the display property value to inline or inline-block, the list item marker, be it a bullet, number, or other style, is removed.</p>
<p>More often than not, we’ll use the <strong>inline-block</strong> property value rather than the inline property value. The inline-block property value allows us to easily add vertical margins and other spacing to the <code>&lt;li</code>&gt; elements, whereas the inline property value does not.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">li</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">10px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h3 id="Floating_List">Floating List</h3>
<p>￼Changing the display property value to inline or inline-block is quick; however, it removes the list item marker. <strong>If the list item marker is needed, floating each <code>&lt;li</code>&gt; element is a better option than changing the display property</strong>. </p>
<p>Setting all <code>&lt;li</code>&gt; elements’ float property to left will horizontally align all <code>&lt;li</code>&gt; elements directly next to each other without any space between them. When we float each <code>&lt;li</code>&gt; element, the list item marker is displayed by default and will actually sit on top of the <code>&lt;li</code>&gt; element next to it. To prevent the list item marker from being displayed on top of other <code>&lt;li</code>&gt; elements, a horizontal margin or padding should be added.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">li</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">20px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>As when floating any element, this breaks the flow of the page. We must remember to clear our floats—most commonly with the clearfix technique—and return the page back to its normal flow.</p>
<h3 id="Navigational_List_Example">Navigational List Example</h3>
<p>We’ll often develop, and find, navigation menus using unordered lists. These lists are commonly laid out as horizontal lists, using either of the two techniques previously mentioned. Here is an example of a horizontal navigation menu marked up using an unordered list with <code>&lt;li</code>&gt; elements displayed as inline-block elements.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">nav</span> <span class="attribute">class</span>=<span class="value">"navigation"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Profile<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="comment">&lt;!--</span></div><div class="line">    --&gt;<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Settings<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="comment">&lt;!--</span></div><div class="line">    --&gt;<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Notifications<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="comment">&lt;!--</span></div><div class="line">    --&gt;<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Logout<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">nav</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class">.navigation</span> <span class="tag">ul</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">font</span>:<span class="value"> bold <span class="number">11px</span> <span class="string">"Helvetica Neue"</span>, Helvetica, Arial, sans-serif</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">text-transform</span>:<span class="value"> uppercase</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.navigation</span> <span class="tag">li</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.navigation</span> <span class="tag">a</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#395870</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">linear-gradient</span>(<span class="hexcolor">#49708f</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">border-right</span>:<span class="value"> <span class="number">1px</span> solid <span class="function">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>)</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#fff</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">12px</span> <span class="number">20px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.navigation</span> <span class="tag">a</span><span class="pseudo">:hover</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#314b60</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> inset <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">1px</span> <span class="function">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.navigation</span> <span class="tag">li</span><span class="pseudo">:first-child</span> <span class="tag">a</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span></span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.navigation</span> <span class="tag">li</span><span class="pseudo">:last-child</span> <span class="tag">a</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">border-right</span>:<span class="value"> <span class="number">0</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">0</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h2 id="Summary">Summary</h2>
<p>Lists are used quite commonly in HTML, often in places that might not be obvious or apparent. The key is to use them as semantically as possible and to leverage them where they best fit.</p>
<p>Let’s recap. Within this lesson we covered the following:</p>
<ul>
<li>How to create <strong>unordered</strong>, <strong>ordered</strong>, and <strong>description</strong> lists</li>
<li>How to properly <strong>nest lists</strong> inside of other lists</li>
<li>How to change the <strong>list item marker</strong> style and position</li>
<li>How to use a <strong>background image instead of a list item marker</strong></li>
<li>How to <strong>horizontally display or float lists</strong></li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_8:_Creating_Lists"><a href="http://learn.shayhowe.com/html-css/creating-lists/" target="_blank" rel="external">Lesson 8: Creating Lists</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/02/02/Learn%20to%20Code%20HTML%20&%20CSS%207/"/>
    <id>http://baoxiehao.com/2015/02/02/Learn to Code HTML & CSS 7/</id>
    <published>2015-02-02T06:14:00.000Z</published>
    <updated>2015-02-03T06:17:58.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_7:_Setting_Backgrounds_&amp;_Gradients"><a href="http://learn.shayhowe.com/html-css/setting-backgrounds-and-gradients/" target="_blank" rel="external">Lesson 7: Setting Backgrounds &amp; Gradients</a></h1>
<a id="more"></a>

<p>Backgrounds have a significant impact on the design of a website. They help create a site’s look and feel, establish groupings, and assign priority, and they have a considerable influence on a website’s usability.</p>
<p>Within CSS, element backgrounds can be a <strong>solid color</strong>, an <strong>image</strong>, a <strong>gradient</strong>, or a <strong>combination</strong> of these. As we decide how to implement these backgrounds, we should keep in mind that every background contributes to the overall appearance of our website.</p>
<h2 id="Adding_a_Background_Color">Adding a Background Color</h2>
<p>The quickest way to add a background to an element is to add a single-color background using the <strong>background</strong> or <strong>background-color</strong> property. The background property accepts colors and images in shorthand form, while the background-color property is used strictly for setting solid background colors.</p>
<pre><code>Transparent Backgrounds

When using an RGBa <span class="keyword">or</span> HSLa value <span class="keyword">as</span> a transparent background color, <span class="keyword">it</span>’s a good idea <span class="keyword">to</span> provide a fallback color, too, because <span class="keyword">not</span> all browsers recognize RGBa <span class="keyword">or</span> HSLa values. And when a browser comes across a value <span class="keyword">it</span> doesn’t recognize, <span class="keyword">it</span> will ignore <span class="keyword">it</span>. Fortunately, there <span class="keyword">is</span> an easy way <span class="keyword">to</span> provide a fallback background.

<span class="keyword">div</span> {
  background-color: <span class="comment">#b2b2b2;</span>
  background-color: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">.3</span>);
}
</code></pre><h2 id="Adding_a_Background_Image">Adding a Background Image</h2>
<p>Besides adding a background color to an element, we can also add a background image. Background images work similarly to background colors; however, they offer a few additional properties to finesse the images. As before, we can use the background property with a shorthand value, or we can use the <strong>background-image</strong> property outright. No matter which property we use, there must be an image source identified using a <strong>url()</strong> function.</p>
<h3 id="Background_Repeat">Background Repeat</h3>
<p>By default, a background image will repeat indefinitely, both vertically and horizontally, unless otherwise specified. The <strong>background-repeat</strong> property may be used to change the direction in which a background image is repeated, if repeated at all.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background-image</span>:<span class="value"> <span class="function">url</span>(<span class="string">"alert.png"</span>)</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-repeat</span>:<span class="value"> no-repeat</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>The background-repeat property accepts four different values: <strong>repeat</strong>, <strong>repeat-x</strong>, <strong>repeat-y</strong>, and <strong>no-repeat</strong>. The repeat value is the default value and will repeat a background image both vertically and horizontally.</p>
<h3 id="Background_Position">Background Position</h3>
<p>By default, background images are positioned at the left top corner of an element. However, by using the <strong>background-position</strong> property, we can control exactly where the background image is placed relative to that corner.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background-image</span>:<span class="value"> <span class="function">url</span>(<span class="string">"alert.png"</span>)</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-position</span>:<span class="value"> <span class="number">20px</span> <span class="number">10px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-repeat</span>:<span class="value"> no-repeat</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>The background-position property requires two values: a horizontal offset (the first value) and a vertical offset (the second value). If only one value is specified, that value is used for both the horizontal offset and the vertical offset will default to 50%.</p>
<h3 id="Shorthand_Background_Image_Values">Shorthand Background Image Values</h3>
<p>The background-color, background-image, background-position, and background-repeat properties may be rolled up into a shorthand value for the background property alone. The order of these properties as a shorthand background property value may vary, however it commonly falls as <strong>background-color</strong>, <strong>background-image</strong>, <strong>background-position</strong>, and then <strong>background-repeat</strong>.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#b2b2b2</span> <span class="function">url</span>(<span class="string">"alert.png"</span>) <span class="number">20px</span> <span class="number">10px</span> no-repeat</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h2 id="Designing_Gradient_Backgrounds">Designing Gradient Backgrounds</h2>
<p>Gradient backgrounds were introduced with CSS3, and designers and front-end developers everywhere rejoiced. Although gradient backgrounds do not work in legacy browsers, they are supported by all modern browsers.</p>
<p>Within CSS, gradient backgrounds are treated as background images. We can create a gradient using the background or background-image properties, just like a regular background image. The property value for a gradient background varies depending on what type of gradient we’d like, <strong>linear</strong> or <strong>radial</strong>.</p>
<h3 id="Linear_Gradient_Background">Linear Gradient Background</h3>
<p>For years designers and developers have been cutting up gradient image files, created using image-processing software, and using them as linear gradient backgrounds on elements. The process worked, but it took a while to implement and was very inflexible. Fortunately those days are gone, and <a href="http://dev.opera.com/articles/css3-linear-gradients/" target="_blank" rel="external">linear gradient backgrounds</a> can now be specified within CSS.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#466368</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">-webkit-linear-gradient</span>(<span class="hexcolor">#648880</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value">    <span class="function">-moz-linear-gradient</span>(<span class="hexcolor">#648880</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value">         <span class="function">linear-gradient</span>(<span class="hexcolor">#648880</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h4 id="Changing_the_Direction_of_a_Gradient_Background">Changing the Direction of a Gradient Background</h4>
<p>By default, linear gradient backgrounds move from the top to the bottom of an element, transitioning smoothly between the first color value and the second. This direction, however, may be changed with the use of <strong>keywords</strong> or a <strong>degree value</strong> stated before any color values.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#466368</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">linear-gradient</span>(to right bottom, <span class="hexcolor">#648880</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>When we use a diagonal gradient on an element that isn’t exactly square, the background gradient will not proceed directly from one corner to the other. Instead, the gradient will identify the absolute center of the element, place anchors in the perpendicular corners from where it should progress, and then move to the general direction of the corner stated within the value. These corners the gradient moves towards are called “magic corners,” as they are not absolute. Eric Meyer has done a wonderful job of outlining this syntax in his article “<a href="http://meyerweb.com/eric/thoughts/2012/04/26/lineargradient-keywords/" target="_blank" rel="external">Linear Gradient Keywords</a>”.</p>
<h4 id="Radial_Gradient_Background">Radial Gradient Background</h4>
<p>While the linear gradient is perfect for a gradient moving from one direction to another, often the need for a radial gradient arises. Radial background gradients work just like linear gradients and share many of the same values.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#466368</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">radial-gradient</span>(<span class="hexcolor">#648880</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>Radial gradients work from the inside to the outside of an element. Thus, the first color identified within the radial-gradient() function will sit in the absolute center of the element, and the second color will sit on the outside of an element. The browser will then create the transition between the two colors.</p>
<p>One of the primary differences between radial gradients and linear gradients is that radial gradients can be quite complex, with values for <strong>location</strong>, <strong>size</strong>, <strong>radius</strong>, and so forth. We’ll cover the basics, but please feel free to delve further into <a href="http://dev.opera.com/articles/css3-radial-gradients/" target="_blank" rel="external">radial gradients</a>, as they provide much more power than is outlined here.</p>
<h4 id="CSS3_Gradient_Background_Generator">CSS3 Gradient Background Generator</h4>
<p>Working with CSS3 gradients by hand can be quite difficult at times, especially if you are new to them. Fortunately, a few <a href="http://ie.microsoft.com/testdrive/graphics/cssgradientbackgroundmaker/default.html" target="_blank" rel="external">CSS3 gradient generators</a> have popped up. Each generator works a little differently, and some provide more options than others. If you’re interested, I recommend doing some research to find the right generator for your needs.</p>
<h4 id="Gradient_Color_Stops">Gradient Color Stops</h4>
<p>At a minimum, gradient backgrounds will transition from one color to another; however, we may add <strong>multiple colors</strong> to a gradient and have the browser transition between all of them. To do this we’ll add color stops to the given gradient function, with commas separating each color stop from the next.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#648880</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">linear-gradient</span>(to right, <span class="hexcolor">#f6f1d3</span>, <span class="hexcolor">#648880</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>By default, the browser will position every color stop an equal distance from the next and will transition between them accordingly. If more control over how colors are positioned is desired, a location along the gradient may be identified for each color stop. The location should be declared as a length value and should fall after the color value. Unless specified otherwise, the first color stop will be positioned at 0%, and the last color stop will be positioned at 100%.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#648880</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">linear-gradient</span>(to right, <span class="hexcolor">#f6f1d3</span>, <span class="hexcolor">#648880</span> <span class="number">85%</span>, <span class="hexcolor">#293f50</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h2 id="Using_Multiple_Background_Images">Using Multiple Background Images</h2>
<p>For the longest time, elements were allowed to have only one background image at a time, which created quite a few constraints when designing a page. Fortunately, with CSS3, we can now use more than one background image on an element by comma-separating multiple background values within a background or background-image property. The background image value that comes first will be the foremost background image, and the background image that’s listed last will be the rearmost background image. </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value">  <span class="function">url</span>(<span class="string">"foreground.png"</span>) <span class="number">0</span> <span class="number">0</span> no-repeat, <span class="function">url</span>(<span class="string">"middle-ground.png"</span>) <span class="number">0</span> <span class="number">0</span> no-repeat, <span class="function">url</span>(<span class="string">"background.png"</span>) <span class="number">0</span> <span class="number">0</span> no-repeat</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h2 id="Exploring_New_Background_Properties">Exploring New Background Properties</h2>
<p>Along with gradient backgrounds and multiple background images, CSS3 also introduced three new CSS properties: <strong>background-size</strong>, <strong>background-clip</strong>, and <strong>background-origin</strong>.</p>
<p>The background-size property allows us to change the size of a background image, while the background-clip and background-origin properties allow us to control where a background image is cropped and where a background image is contained within the element (inside the border or inside the padding, for example).</p>
<h3 id="CSS3_Background_Size">CSS3 Background Size</h3>
<p>The background-size property allows us to specify a size for a background image. The property accepts a few different values, including length and keyword values.</p>
<p>When using length values, we can specify a width and a height value by using two space-separated values. The first value will set the width of the background image, while the second value will set the height of the background image. If a second value isn’t identified after the width, the height value will be automatically set to preserve the aspect ratio of the background image. The keyword value <strong>auto</strong> may be used as either the width or height value to preserve the aspect ratio of the background image.</p>
<p> It’s important to note that <strong>percentage</strong> values are <strong>in relation to the element’s size</strong>, not the background image’s original size.</p>
<h3 id="Cover_&amp;_Contain_Keyword_Values">Cover &amp; Contain Keyword Values</h3>
<p>In addition to length background-size property values, there are also <strong>cover</strong> and <strong>contain</strong> keyword values available to the background-size property.</p>
<p>The <strong>cover</strong> keyword value specifies that the background image will be resized to completely cover an element’s width and height. The background <strong>image’s original aspect ratio will be preserved</strong>, yet the image will stretch or shrink as necessary to cover the entire element. Often when using the cover keyword value, part of the background image is cut off in order for the image to occupy the full available space of the element.</p>
<p>The <strong>contain</strong> keyword value, on the other hand, specifies that the background image will be resized to reside entirely contained within an element’s width and height. In doing so the background <strong>image’s original aspect ratio will be preserved</strong>, but the image will stretch or shrink as necessary to remain within the width and height of the element. <strong>In contrast with the cover keyword value, the contain keyword value will always show the full background image</strong>; however, oftentimes it will not occupy the full available space of the element.</p>
<p>Both the cover and contain keyword values <strong>may result in slightly distorted</strong> background images, particularly when the images are stretched beyond their original dimensions. We’ll want to keep an eye out for this when using these values, to make sure the resulting styles are satisfactory.</p>
<h3 id="CSS3_Background_Clip_&amp;_Background_Origin">CSS3 Background Clip &amp; Background Origin</h3>
<p>The <strong>background-clip</strong> property specifies the surface area a background image will cover, and the <strong>background-origin</strong> property specifies where the background-position should originate. The introduction of these two new properties corresponds with the introduction of three new keyword values: <strong>border-box</strong>, <strong>padding-box</strong>, and <strong>content-box</strong>. Each of these three values may be used for the background-clip and background-origin properties.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(<span class="string">"shay.jpg"</span>) <span class="number">0</span> <span class="number">0</span> no-repeat</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-clip</span>:<span class="value"> padding-box</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-origin</span>:<span class="value"> border-box</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h2 id="Summary">Summary</h2>
<p>Adding backgrounds and gradients to our pages allows us to bring color to the forefront of our designs. These features also help to define how content is grouped and to improve the layout of our pages as a whole.</p>
<p>To review, this lesson covered the following:</p>
<ul>
<li>How to add <strong>background colors and images</strong> to elements</li>
<li><strong>CSS gradients</strong>, both linear and radial, and how to customize them</li>
<li>How to apply <strong>multiple background images</strong> to a single element</li>
<li>New CSS3 properties that allow us to change the <strong>size</strong>, <strong>surface area</strong>, and <strong>origin</strong> of background images</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_7:_Setting_Backgrounds_&amp;_Gradients"><a href="http://learn.shayhowe.com/html-css/setting-backgrounds-and-gradients/" target="_blank" rel="external">Lesson 7: Setting Backgrounds &amp; Gradients</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/02/01/Learn%20to%20Code%20HTML%20&%20CSS%206/"/>
    <id>http://baoxiehao.com/2015/02/01/Learn to Code HTML & CSS 6/</id>
    <published>2015-02-01T06:14:00.000Z</published>
    <updated>2015-02-03T06:17:57.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_6:_Working_with_Typography"><a href="http://learn.shayhowe.com/html-css/working-with-typography/" target="_blank" rel="external">Lesson 6: Working with Typography</a></h1>
<a id="more"></a>

<p>The field of <a href="http://webtypography.net/" target="_blank" rel="external">web typography</a> has grown substantially over time. There are a couple of different reasons for its rise in popularity; one widely acknowledged reason is the development of a system for embedding our own web fonts on a website.</p>
<pre><code>Typeface vs. Font

The terms “typeface” <span class="keyword">and</span> “font” are often interchanged, causing confusion. Here <span class="keyword">is</span> a breakdown <span class="keyword">of</span> exactly what each term means. A typeface <span class="keyword">is</span> what we see. It <span class="keyword">is</span> <span class="keyword">the</span> artistic impression <span class="keyword">of</span> how <span class="type">text</span> looks, feels, <span class="keyword">and</span> reads. A font <span class="keyword">is</span> a <span class="type">file</span> <span class="keyword">that</span> <span class="keyword">contains</span> a typeface. Using a font <span class="function_start"><span class="keyword">on</span></span> a computer allows <span class="keyword">the</span> computer <span class="keyword">to</span> access <span class="keyword">the</span> typeface. One way <span class="keyword">to</span> help clarify <span class="keyword">the</span> difference <span class="keyword">between</span> a typeface <span class="keyword">and</span> a font <span class="keyword">is</span> <span class="keyword">to</span> compare them <span class="keyword">to</span> a song <span class="keyword">and</span> an MP3.
</code></pre><h2 id="Adding_Color_to_Text">Adding Color to Text</h2>
<p>Typically one of the first decisions we’ll make when building a website is choosing the <strong>primary typeface</strong> and <strong>text color</strong> to be used. While there are a number of other properties that can be changed—size, weight, and so on—the typeface and text color generally have the largest impact on the look and legibility of a page.</p>
<h2 id="Changing_Font_Properties">Changing Font Properties</h2>
<p>CSS offers a lot of different properties for editing the look and feel of text on a page. These properties fit into two categories: <strong>font-based</strong> properties and <strong>text-based</strong> properties. Most of these properties will be prefaced with either font-<em> or text-</em>.</p>
<h3 id="Font_Family">Font Family</h3>
<p>The font-family property is used to declare which font—as well as which fallback or substitute fonts—should be used to display text. The value of the font-family property contains multiple font names, all comma separated.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">body</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Helvetica Neue"</span>, Helvetica, Arial, sans-serif</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h3 id="Font_Size">Font Size</h3>
<p>The font-size property provides the ability to set the size of text using common length values, including pixels, em units, percentages, points, or font-size keywords.</p>
<h3 id="Font_Style">Font Style</h3>
<p>To change text to italics, or to prevent text from being italicized, we’ll use the font-style property. The font-style property accepts four keyword values: <strong>normal</strong>, <strong>italic</strong>, <strong>oblique</strong>, and <strong>inherit</strong>. Of these four, the most commonly used are italic (sets text to italic) and normal (returns text to its normal style).</p>
<h3 id="Font_Variant">Font Variant</h3>
<p>It doesn’t happen often, but occasionally text will need to be set in small capitals, also known as small caps. For this specific case we’ll use the font-variant property. The font-variant property accepts three values: <strong>normal</strong>, <strong>small-caps</strong>, and <strong>inherit</strong>.</p>
<h3 id="Font_Weight">Font Weight</h3>
<p>Occasionally, we’ll want to style text as bold or to change the specific weight of a typeface. For these cases we’ll use the font-weight property. The font-weight property accepts either keyword or numeric values.</p>
<p>Keyword values include <strong>normal</strong>, <strong>bold</strong>, <strong>bolder</strong>, <strong>lighter</strong>, and <strong>inherit</strong>. Of these keyword values, it is recommended to primarily use normal and bold to change text from normal to bold and vice versa. Rather than using the keyword values bolder or lighter, it’s better to use a numeric value for more specific control.</p>
<p>The numeric values 100, 200, 300, 400, 500, 600, 700, 800, and 900 pertain specifically to typefaces that have multiple weights. The order of these weights starts with the thinnest weight, 100, and scales up to the thickest weight, 900. For reference, the keyword value of normal maps to <strong>400</strong> and the keyword bold maps to <strong>700</strong>.</p>
<pre><code>Typeface Weights

Before <span class="keyword">using</span> <span class="operator">a</span> <span class="keyword">numeric</span> <span class="built_in">value</span>, we need <span class="built_in">to</span> check <span class="operator">and</span> see whether <span class="operator">the</span> typeface we are <span class="keyword">using</span> comes <span class="operator">in</span> <span class="operator">the</span> weight we’d like <span class="built_in">to</span> use. Attempting <span class="built_in">to</span> use <span class="operator">a</span> weight that’s <span class="operator">not</span> available <span class="keyword">for</span> <span class="operator">a</span> given typeface will cause those styles <span class="built_in">to</span> default <span class="built_in">to</span> <span class="operator">the</span> closest <span class="built_in">value</span>.
</code></pre><h3 id="Line_Height">Line Height</h3>
<p>Line height, the distance between two lines of text (often referred to as leading) is declared using the line-height property. The line-height property accepts all general length values, which we covered in Lesson 3, “Getting to Know CSS.”</p>
<p>The best practice for legibility is to set the line-height to around one and a half times our font-size property value. This could be quickly accomplished by setting the line-height to <strong>150%</strong>, or just <strong>1.5</strong>. However, if we’re working with a baseline grid, having a little more control over our line-height using pixels may be preferable.</p>
<p>Line height may also be used to vertically center a single line of text within an element. Using the same property value for the line-height and height properties will vertically center the text:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="class">.btn</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">22px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">22px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>This technique may be seen with buttons, alert messages, and other single-line text blocks.</p>
<h3 id="Shorthand_Font_Properties">Shorthand Font Properties</h3>
<p>All of the font-based properties listed earlier may be combined and rolled into one font property and shorthand value. The font property can accept multiple font-based property values. The order of these property values should be as follows, from left to right: <strong>font-style</strong>, <strong>font-variant</strong>, <strong>font-weight</strong>, <strong>font-size</strong>, <strong>line-height</strong>, and <strong>font-family</strong>.</p>
<p>As a shorthand value, these property values are listed from left to right without the use of commas (except for font names, as the font-family property value uses commas). <strong>A forward slash, /, separator is needed between the font-size and line-height property values</strong>.</p>
<p>When using this shorthand value, every property value is optional except the font-size and font-family property values. That said, we can include <strong>only the font-size and font-family</strong> property values in the shorthand value if we wish.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">html</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">font</span>:<span class="value"> italic small-caps bold <span class="number">14px</span>/<span class="number">22px</span> <span class="string">"Helvetica Neue"</span>, Helvetica, Arial, sans-serif</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h2 id="Applying_Text_Properties">Applying Text Properties</h2>
<p>Knowing how to set the family, size, style, variant, weight, and line height of a font is only half the battle. Additionally we can decide how to <strong>align</strong>, <strong>decorate</strong>, <strong>indent</strong>, <strong>transform</strong>, and <strong>space</strong> text.</p>
<h3 id="Text_Align">Text Align</h3>
<p>Aligning text is an important part of building a rhythm and flow on a page; we do this using the text-align property. The text-align property has five values: <strong>left</strong>, <strong>right</strong>, <strong>center</strong>, <strong>justify</strong>, and <strong>inherit</strong>.</p>
<h3 id="Text_Decoration">Text Decoration</h3>
<p>The text-decoration property provides a handful of ways to spruce up text. It accepts the keyword values of <strong>none</strong>, <strong>underline</strong>, <strong>overline</strong>, <strong>line-through</strong>, and <strong>inherit</strong>. Use of the text-decoration property varies, but the most popular use is to underline links, which is a default browser style. Multiple text-decoration values may be applied to an element at once by space-separating each keyword within the value.</p>
<h3 id="Text_Indent">Text Indent</h3>
<p>The text-indent property can be used to indent the first line of text within an element, as is commonly seen in printed publications. All common length values are available for this property, including pixels, points, percentages, and so on. Positive values will indent text inward, while negative values will indent text outward.</p>
<h3 id="Text_Shadow">Text Shadow</h3>
<p>The text-shadow property allows us to add a shadow or multiple shadows to text. The property generally takes four values, all listed one after the other from left to right. The first three values are lengths, and the last value is a color: <strong>horizontal offset</strong>, <strong>vertical offset</strong>, <strong>blur radius</strong>, and <strong>shadow color</strong>. Using negative length values for the horizontal and vertical offsets allows us to move shadows toward the left and the top.</p>
<p>Multiple text shadows can also be chained together using comma-separated values, adding more than one shadow to the text. Using numerous shadows allows us to place them above and below the text, or in any variation we desire.</p>
<pre><code>Box Shadow

The <span class="keyword">text</span>-shadow property places <span class="operator">a</span> shadow specifically <span class="command"><span class="keyword">on</span> <span class="title">the</span> <span class="title">text</span> <span class="title">of</span> <span class="title">an</span> <span class="title">element</span>. <span class="title">If</span> <span class="title">we</span>’<span class="title">d</span> <span class="title">like</span> <span class="title">to</span> <span class="title">place</span> <span class="title">a</span> <span class="title">shadow</span> <span class="title">on</span> <span class="title">the</span> <span class="title">element</span> <span class="title">as</span> <span class="title">a</span> <span class="title">whole</span>, <span class="title">we</span> <span class="title">can</span> <span class="title">use</span> <span class="title">the</span> <span class="title">box-shadow</span> <span class="title">property</span>. <span class="title">The</span> <span class="title">box-shadow</span> <span class="title">property</span> <span class="title">works</span> <span class="title">just</span> <span class="title">like</span> <span class="title">the</span> <span class="title">text-shadow</span> <span class="title">property</span>, <span class="title">accepting</span> <span class="title">values</span> <span class="title">for</span> <span class="title">horizontal</span> <span class="title">and</span> <span class="title">vertical</span> <span class="title">offsets</span>, <span class="title">a</span> <span class="title">blur</span>, <span class="title">and</span> <span class="title">a</span> <span class="title">color</span>.</span>

The box-shadow property also accepts <span class="operator">an</span> optional <span class="keyword">fourth</span> <span class="built_in">length</span> <span class="built_in">value</span>, <span class="keyword">before</span> <span class="operator">the</span> color <span class="built_in">value</span>, <span class="keyword">for</span> <span class="operator">the</span> **spread** <span class="operator">of</span> <span class="operator">a</span> shadow. As <span class="operator">a</span> positive <span class="built_in">length</span> <span class="built_in">value</span>, <span class="operator">the</span> spread will expand <span class="operator">the</span> shadow larger than <span class="operator">the</span> size <span class="operator">of</span> <span class="operator">the</span> <span class="keyword">element</span> <span class="keyword">it</span>’s applied <span class="built_in">to</span>, <span class="operator">and</span> <span class="keyword">as</span> <span class="operator">a</span> negative <span class="built_in">length</span> <span class="built_in">value</span> <span class="operator">the</span> spread will shrink <span class="operator">the</span> shadow <span class="built_in">to</span> be smaller than <span class="operator">the</span> size <span class="operator">of</span> <span class="operator">the</span> <span class="keyword">element</span> <span class="keyword">it</span>’s applied <span class="built_in">to</span>.

Lastly, <span class="operator">the</span> box-shadow property may <span class="built_in">include</span> <span class="operator">an</span> optional **inset** <span class="built_in">value</span> <span class="keyword">at</span> <span class="operator">the</span> beginning <span class="operator">of</span> <span class="operator">the</span> <span class="built_in">value</span> <span class="built_in">to</span> place <span class="operator">the</span> shadow inside <span class="operator">an</span> <span class="keyword">element</span> <span class="keyword">as</span> opposed <span class="built_in">to</span> outside <span class="operator">the</span> <span class="keyword">element</span>.
</code></pre><h3 id="Text_Transform">Text Transform</h3>
<p>Similar to the font-variant property, there is the text-transform property. While the font-variant property looks for an alternate variant of a typeface, the text-transform property will change the text inline without the need for an alternate typeface. The text-transform property accepts five values: <strong>none</strong>, <strong>capitalize</strong>, <strong>uppercase</strong>, <strong>lowercase</strong>, and <strong>inherit</strong>.</p>
<h3 id="Letter_Spacing">Letter Spacing</h3>
<p>Using the letter-spacing property, we can adjust the space (or tracking) between the letters on a page. A <strong>positive length</strong> value will push letters farther apart from one another, while a <strong>negative length</strong> value will pull letters closer together. The keyword value <strong>none</strong> will return the space between letters back to its normal size.</p>
<p>Using a <strong>relative length</strong> value with the letter-spacing property will help ensure that we maintain the correct spacing between letters as the font-size of the text is changed. It is, however, always a good idea to double-check our work.</p>
<h3 id="Word_Spacing">Word Spacing</h3>
<p>Much like the letter-spacing property, we can also adjust the space between words within an element using the word-spacing property. The word-spacing property accepts the same length values and keywords as the letter-spacing property.</p>
<h2 id="Using_Web-Safe_Fonts">Using Web-Safe Fonts</h2>
<p>By default there are a few fonts that are pre-installed on every computer, tablet, smart-phone, or other web-browsing-capable device. Because they’ve been installed on every device, we can use these fonts freely within our websites, knowing that no matter what device is browsing our site, the font will render properly. These fonts have become known as “web-safe fonts.” There are only a handful of them, and the safest of the web-safe fonts are listed here:</p>
<ul>
<li>Arial</li>
<li>Courier New, Courier</li>
<li>Garamond</li>
<li>GeorgiaLucida Sans</li>
<li>Lucida Grande, Lucida</li>
<li>Palatino Linotype</li>
<li>Tahoma</li>
<li>Times New Roman, Times</li>
<li>Trebuchet</li>
<li>Verdana</li>
</ul>
<h2 id="Embedding_Web_Fonts">Embedding Web Fonts</h2>
<p>We also have the ability to upload fonts to a server and include them on a website via the CSS @font-face at-rule. This capability has done wonders for online typography. Now, more than ever, typography is coming to life online.</p>
<p>Embedding our own web fonts looks a bit like the following CSS. First, we use the @font-face at-rule to identify our font’s name, via the font-family property, as well as the source of our font (the path to the font file containing our chosen font), via the src property. From there we are able to use this font by including its name within any font-family property value.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="at_rule">@<span class="keyword">font-face</span></span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Lobster"</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">src</span>:<span class="value"> <span class="function">local</span>(<span class="string">"Lobster"</span>), <span class="function">url</span>(<span class="string">"lobster.woff"</span>) <span class="function">format</span>(<span class="string">"woff"</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="tag">body</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Lobster"</span>, <span class="string">"Comic Sans"</span>, cursive</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>Having the ability to embed any typeface on a website does not mean we legally have the authority to do so. Typefaces are works of art, and posting them on our server may allow others to easily steal them. The authority to use a typeface depends on the licensing we’ve been warranted.</p>
<p>Fortunately, the value of using new typefaces online has been recognized, and companies have begun developing ways to license and include new fonts on websites. Some of these companies, like <a href="https://typekit.com/" target="_blank" rel="external">Typekit</a> and <a href="http://fontdeck.com/" target="_blank" rel="external">Fontdeck</a>, work off a subscription model for licensing fonts, while others, like <a href="https://www.google.com/fonts" target="_blank" rel="external">Google Fonts</a>, license the fonts for free. Before uploading any fonts, let’s make sure we have permission to do so.</p>
<h2 id="Including_Citations_&amp;_Quotes">Including Citations &amp; Quotes</h2>
<p>Writing online sometimes involves citing different sources or quotations. All of the different citation and quotation cases can be covered semantically in HTML using the <code>&lt;cite</code>&gt;, <code>&lt;q</code>&gt;, and <code>&lt;blockquote</code>&gt; elements. Because they are usually distinguished from regular text in appearance, we’ll discuss them here in the typography lesson.</p>
<p>Knowing when to use which element and attribute to properly mark up citations and quotes takes a bit of practice. In general, follow these rules:</p>
<ul>
<li><code>&lt;cite</code>&gt;: Used to reference a creative work, author, or resource</li>
<li><code>&lt;q</code>&gt;: Used for short, inline quotations</li>
<li><code>&lt;blockquote</code>&gt;: Used for longer external quotations</li>
</ul>
<h3 id="Citing_a_Creative_Work">Citing a Creative Work</h3>
<p>The <code>&lt;cite</code>&gt; inline element is used in HTML to specifically cite a creative work; the element must include either the title of the work, the author’s name, or a URL reference to the work. By default, content wrapped within the <code>&lt;cite</code>&gt; element will appear in italics within the browser. For additional reference, it helps to include a hyperlink to the original source of the citation when relevant.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">    The book <span class="tag">&lt;<span class="title">cite</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://www.amazon.com/Steve-Jobs-Walter-Isaacson/dp/1451648537"</span>&gt;</span>Steve Jobs<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">cite</span>&gt;</span> is truly inspirational.</div><div class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Dialogue_&amp;_Prose_Quotation">Dialogue &amp; Prose Quotation</h3>
<p>Quite often, dialogue or prose is quoted inline, within other text. For this purpose, the <code>&lt;q</code>&gt; (or quote) inline element should be applied. The <code>&lt;q</code>&gt; element semantically indicates quoted dialogue or prose and shouldn’t be used for any other purposes.</p>
<p>By default, the browser will insert the proper quotation marks for us and will even change the quotation marks based on the language identified within the lang global attribute.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">    Steve Jobs once said, <span class="tag">&lt;<span class="title">q</span>&gt;</span>One home run is much better than two doubles.<span class="tag">&lt;/<span class="title">q</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Dialogue_&amp;_Prose_Citation">Dialogue &amp; Prose Citation</h3>
<p>An optional attribute to include on the <code>&lt;q</code>&gt; element is the cite attribute. The cite attribute acts as a citation reference to the quote in the form of a URL. This attribute doesn’t alter the appearance of the element; it simply adds value for screen readers and other devices. Because the attribute isn’t viewable within the browser, it’s also helpful to provide a hyperlink to this source next to the actual quotation.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://www.businessweek.com/magazine/content/06_06/b3970001.htm"</span>&gt;</span>Steve Jobs<span class="tag">&lt;/<span class="title">a</span>&gt;</span> once said, <span class="tag">&lt;<span class="title">q</span> <span class="attribute">cite</span>=<span class="value">"http://www.businessweek.com/magazine/content/06_06/b3970001.htm"</span>&gt;</span>One home run is much better than two doubles.<span class="tag">&lt;/<span class="title">q</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="External_Quotation">External Quotation</h3>
<p>To quote a large block of text that comes from an external source and spans several lines, we’ll use the <code>&lt;blockquote</code>&gt; element. The <code>&lt;blockquote</code>&gt; is a <strong>block-level</strong> element that may have other block-level elements nested inside it, including headings and paragraphs.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">blockquote</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">        &#8220;In most people&#8217;s vocabularies, design is a veneer. It&#8217;s interior decorating. It&#8217;s the fabric of the curtains, of the sofa. But to me, nothing could be further from the meaning of design. Design is the fundamental soul of a human-made creation that ends up expressing itself in successive outer layers of the product.&#8221;</div><div class="line">    <span class="tag">&lt;/<span class="title">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">blockquote</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="External_Citation">External Citation</h3>
<p>Longer quotes used within the <code>&lt;blockquote</code>&gt; element will often include a citation. This citation may comprise both the cite attribute and the <code>&lt;cite</code>&gt; element.</p>
<p>The cite attribute can be included on the <code>&lt;blockquote</code>&gt; element—in the same way that it was used on the <q> element earlier—to provide a citation reference to the quote in the form of a URL. The <code>&lt;cite</code>&gt; element then can fall after the actual quote itself to specify the original source of the quote, if relevant.</q></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">blockquote</span> <span class="attribute">cite</span>=<span class="value">"http://money.cnn.com/magazines/fortune/fortune_archive/2000/01/24/272277/index.htm"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">        &#8220;In most people&#8217;s vocabularies, design is a veneer. It&#8217;s interior decorating. It&#8217;s the fabric of the curtains, of the sofa. But to me, nothing could be further from the meaning of design. Design is the fundamental soul of a human-made creation that ends up expressing itself in successive outer layers of the product.&#8221;</div><div class="line">    <span class="tag">&lt;/<span class="title">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">cite</span>&gt;</span>&#8212; Steve Jobs in <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://money.cnn.com/ magazines/fortune/fortune_archive/2000/01/24/272277/index.htm"</span>&gt;</span> Fortune Magazine<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">cite</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">blockquote</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Summary">Summary</h2>
<p>Learning how to style text is exciting, as our content can begin to convey some emotion. We can also start to play around with the hierarchy of our content, making our website more legible and digestible.</p>
<p>To quickly recap, within this lesson we discussed the following:</p>
<ul>
<li>Adding <strong>color</strong> to our text to enhance it</li>
<li>Applying <strong>font-based</strong> properties, including font-family, font-size, font-style, font-weight, and more</li>
<li>Applying <strong>text-based</strong> properties, including text-align, text-decoration, text-indent, text-shadow, and more</li>
<li>The history behind web-safe <strong>fonts</strong> and how to embed our own web fonts<br>How to properly mark up <strong>citations</strong> and <strong>quotations</strong></li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_6:_Working_with_Typography"><a href="http://learn.shayhowe.com/html-css/working-with-typography/" target="_blank" rel="external">Lesson 6: Working with Typography</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/01/31/Learn%20to%20Code%20HTML%20&%20CSS%205/"/>
    <id>http://baoxiehao.com/2015/01/31/Learn to Code HTML & CSS 5/</id>
    <published>2015-01-31T06:14:00.000Z</published>
    <updated>2015-02-03T06:18:07.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_5:_Positioning_Content"><a href="http://learn.shayhowe.com/html-css/positioning-content/" target="_blank" rel="external">Lesson 5: Positioning Content</a></h1>
<a id="more"></a>

<p>One of the best things about CSS is that it gives us the ability to position content and elements on a page in nearly any imaginable way, bringing structure to our designs and helping make content more digestible.</p>
<p>There are a few different types of positioning within CSS, and each has its own application. In this chapter we’re going to take a look at a few different use cases—creating reusable layouts and uniquely positioning one-off elements—and describe a few ways to go about each.</p>
<h2 id="Positioning_with_Floats">Positioning with Floats</h2>
<p>One way to position elements on a page is with the float property. The float property is pretty versatile and can be used in a number of different ways.</p>
<p>Essentially, the float property allows us to take an element, remove it from the normal flow of a page, and <a href="http://www.smashingmagazine.com/2007/05/01/css-float-theory-things-you-should-know/" target="_blank" rel="external">position it</a> to the left or right of its parent element. All other elements on the page will then flow around the floated element. An <img> element floated to the side of a few paragraphs of text, for example, will allow the paragraphs to wrap around the image as necessary.</p>
<p>The float property accepts a few values; the two most popular values are <strong>left</strong> and <strong>right</strong>, which allow elements to be floated to the left or right of their parent element.</p>
<p>For reference, when an element is floated, it will float all the way to the edge of its parent element. If there isn’t a parent element, the floated element will then float all the way to the edge of the page.</p>
<p>When we float an element, we take it out of the normal flow of the HTML document. This causes the width of that element to default to the width of the content within it. Sometimes, such as when we’re creating columns for a reusable layout, this behavior is not desired. It can be corrected by adding a fixed <strong>width</strong> property value to each column. Additionally, to prevent floated elements from touching one another, causing the content of one to sit directly next to the content of the other, we can use the <strong>margin</strong> property to create space between elements.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">section</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">1.5%</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">63%</span></span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="tag">aside</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">1.5%</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">30%</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>To position three <code>&lt;section</code>&gt; elements in a three-column row, instead of floating one column to the left and one column to the right, we’ll float all three <code>&lt;section</code>&gt; elements to the left. We’ll also need to adjust the width of the <code>&lt;section</code>&gt; elements to account for the additional columns and to get them to sit one next to the other.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">section</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">1.5%</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">30%</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<pre><code>Floats May <span class="operator"><span class="keyword">Change</span> an Element’s Display <span class="keyword">Value</span>

<span class="keyword">When</span> floating an element, it <span class="keyword">is</span> also important <span class="keyword">to</span> recognize that an element <span class="keyword">is</span> removed <span class="keyword">from</span> the normal flow <span class="keyword">of</span> a page, <span class="keyword">and</span> that may <span class="keyword">change</span> an element’s <span class="keyword">default</span> display <span class="keyword">value</span>. The <span class="built_in">float</span> property relies <span class="keyword">on</span> an element <span class="keyword">having</span> a display <span class="keyword">value</span> <span class="keyword">of</span> block, <span class="keyword">and</span> may <span class="keyword">alter</span> an element’s <span class="keyword">default</span> display <span class="keyword">value</span> <span class="keyword">if</span> it <span class="keyword">is</span> <span class="keyword">not</span> already displayed <span class="keyword">as</span> a block-<span class="keyword">level</span> element.</span>
</code></pre><h3 id="Clearing_&amp;_Containing_Floats">Clearing &amp; Containing Floats</h3>
<p>The float property was originally designed to allow content to wrap around images. An image could be floated, and all of the content surrounding that image could then naturally flow around it. Although this works great for images, the float property was never actually intended to be used for layout and positioning purposes, and thus it comes with a few pitfalls.</p>
<ul>
<li>Occasionally the proper styles will not render on an element that it is sitting next to or is a parent element of a floated element. When an element is floated, it is taken out of the normal flow of the page, and, as a result, <strong>the styles of elements around that floated element can be negatively impacted</strong>. Often margin and padding property values aren’t interpreted correctly, causing them to blend into the floated element; other properties can be affected, too.</li>
<li>Sometimes unwanted content begins to wrap around a floated element. Removing an element from the flow of the document allows <strong>all the elements around the floated element to wrap and consume any available space around the floated element</strong>, which is often undesired.</li>
</ul>
<h4 id="Clearing_Floats">Clearing Floats</h4>
<p>To prevent content from wrapping around floated elements, we need to clear, or contain, those floats and return the page to its normal flow.</p>
<p>Clearing floats is accomplished using the clear property, which accepts a few different values: the most commonly used values being <strong>left</strong>, <strong>right</strong>, and <strong>both</strong>. The left value will clear left floats, while the right value will clear right floats. The both value, however, will clear both left and right floats and is often the most ideal value.</p>
<p>It is important that this clear be applied to an element appearing <strong>after</strong> the floated elements, <strong>not before</strong>, to return the page to its normal flow.</p>
<h4 id="Containing_Floats">Containing Floats</h4>
<p>Rather than clearing floats, another option is to contain the floats. The outcomes of containing floats versus those of clearing them are nearly the same; however, containing floats does help to ensure that all of our styles will be rendered properly.</p>
<p>To contain floats, the floated elements must <strong>reside within a parent</strong> element. The parent element will act as a container, leaving the flow of the document completely normal outside of it. The CSS for that parent element, represented by the group class below, is shown here:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class">.group</span><span class="pseudo">:before</span>,</div><div class="line"><span class="class">.group</span><span class="pseudo">:after</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> table</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.group</span><span class="pseudo">:after</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">clear</span>:<span class="value"> both</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.group</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">clear</span>:<span class="value"> both</span></span>;</div><div class="line">  <span class="rule">*<span class="attribute">zoom</span>:<span class="value"> <span class="number">1</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>There’s quite a bit going on here, but essentially what the CSS is doing is clearing any floated elements within the element with the class of group and returning the flow of the document back to normal.</p>
<p>More specifically, the :before and :after pseudo-elements, as mentioned in the Lesson 4 exercise, are dynamically generated elements above and below the element with the class of group. Those elements do not include any content and are displayed as table-level elements, much like block-level elements. The dynamically generated element after the element with the class of group is clearing the floats within the element with the class of group, much like the clear from before. And lastly, the element with the class of group itself also clears any floats that may appear above it, in case a left or right float may exist. It also includes a little trickery to get older browsers to play nicely.</p>
<p>It is more code than the clear: both; declaration alone, but it can prove to be quite useful.</p>
<h1 id="Positioning_with_Inline-Block">Positioning with Inline-Block</h1>
<p>In addition to using floats, another way we can position content is by using the display property in conjunction with the <strong>inline-block</strong> value. The inline-block method, as we’ll discuss, is primarily helpful for laying out pages or for placing elements next to one another within a line.</p>
<p>Recall that the inline-block value for the display property will display elements within a line while allowing them to accept all box model properties, including <strong>height</strong>, <strong>width</strong>, <strong>padding</strong>, <strong>border</strong>, and <strong>margin</strong>. Using inline-block elements allows us to take full advantage of the box model without having to worry about clearing any floats.</p>
<p>Let’s take a look at our three-column example from before. We’ll start by keeping our HTML just as it is:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">header</span>&gt;</span>...<span class="tag">&lt;/<span class="title">header</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span>...<span class="tag">&lt;/<span class="title">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span>...<span class="tag">&lt;/<span class="title">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span>...<span class="tag">&lt;/<span class="title">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">footer</span>&gt;</span>...<span class="tag">&lt;/<span class="title">footer</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">section</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">1.5%</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">30%</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>Unfortunately, this code alone doesn’t quite do the trick, and the last <code>&lt;section</code>&gt; element is pushed to a new row. Remember, because inline-block elements are displayed on the same line as one another, they include a single <strong>space</strong> between them. </p>
<h3 id="Removing_Spaces_Between_Inline-Block_Elements">Removing Spaces Between Inline-Block Elements</h3>
<p>There are a number of ways to remove the space between inline-block elements, and some are more complex than others. We are going to focus on two of the easiest ways, both of which happen inside HTML.</p>
<ul>
<li>The first solution is to put each new <code>&lt;section</code>&gt; element’s opening tag on the same line as the previous <code>&lt;section</code>&gt; element’s closing tag.</li>
<li>Another way to remove the white space between inline-block elements is to open an HTML comment directly after an inline-block element’s closing tag. Then, close the HTML comment immediately before the next inline-block element’s opening tag.</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">header</span>&gt;</span>...<span class="tag">&lt;/<span class="title">header</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span><span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span><span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">footer</span>&gt;</span>...<span class="tag">&lt;/<span class="title">footer</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">header</span>&gt;</span>...<span class="tag">&lt;/<span class="title">header</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span><span class="comment">&lt;!--</span></div><div class="line">--&gt;<span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span><span class="comment">&lt;!--</span></div><div class="line">--&gt;<span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  ...</div><div class="line"> <span class="tag">&lt;/<span class="title">section</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="title">footer</span>&gt;</span>...<span class="tag">&lt;/<span class="title">footer</span>&gt;</span></div></pre></td></tr></table></figure>

<p>Neither of these options is perfect, but they are helpful. I tend to favor using comments for better organization, but which option you choose is entirely up to you.</p>
<h2 id="Creating_Reusable_Layouts">Creating Reusable Layouts</h2>
<p>When building a website, it is always best to write modular styles that may be reused elsewhere, and <strong>reusable layouts</strong> are high on the list of reusable code. Layouts can be created using either floats or inline-block elements, but which works best and why?</p>
<p>Whether it’s better to use floats or inline-block elements to lay out the structure of a page is open to debate. <strong>My approach is to use inline-block elements to create the grid—or layout—of a page and to then use floats when I want content to wrap around a given element (as floats were intended to do with images)</strong>. Generally, I also find inline-block elements easier to work with.</p>
<p>That said, use whatever works best for you. If you are comfortable with one approach over the other, then go for it.</p>
<p>Currently there are new CSS specifications in the works—specifically <strong>flex- and grid- based properties</strong>—that will help address how to best lay out pages. Keep an eye out for these methods as they begin to surface.</p>
<h2 id="Uniquely_Positioning_Elements">Uniquely Positioning Elements</h2>
<p>Every now and then we’ll want to precisely position an element, but floats or inline-block elements won’t do the trick. <strong>Floats</strong>, which remove an element from the flow of a page, often produce unwanted results as surrounding elements flow around the floated element. <strong>Inline-block</strong> elements, unless we’re creating columns, can be fairly awkward to get into the proper position. For these situations we can use the position property in connection with box offset properties.</p>
<p>The position property identifies how an element is positioned on a page and whether or not it will appear within the normal flow of a document. This is used in conjunction with the box offset properties—top, right, bottom, and left—which identify exactly where an element will be positioned by moving elements in a number of different directions.</p>
<p>By default every element has a position value of <strong>static</strong>, which means that it exists in the normal flow of a document and it doesn’t accept any box offset properties. The static value is most commonly overwritten with a <strong>relative</strong> or <strong>absolute</strong> value, which we’ll examine next.</p>
<h3 id="Relative_Positioning">Relative Positioning</h3>
<p>The relative value for the position property allows elements to appear within the normal flow a page, leaving space for an element as intended while not allowing other elements to flow around it; however, it also allows an element’s display position to be modified with the box offset properties.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"offset"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100px</span></span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.offset</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">20px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">20px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h3 id="Absolute_Positioning">Absolute Positioning</h3>
<p>The absolute value for the position property is different from the relative value in that an element with a position value of absolute will not appear within the normal flow of a document, and the original space and position of the absolutely positioned element will not be preserved. Additionally, absolutely positioned elements are moved in relation to their closest relatively positioned parent element.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"offset"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">section</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">20px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">20px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>With relatively positioned elements, the box offset properties identify in which direction an element would be moved in relation to <strong>itself</strong>. With absolutely positioned elements, the box offset properties identify in which direction an element will be moved in relation to its <strong>closest relatively positioned parent element</strong>.</p>
<h2 id="Summary">Summary</h2>
<p>Learning how to position content within HTML and CSS is a huge step toward mastering the two languages. Add to this the box model, and we’re well on our way to becoming front-end developers.</p>
<p>To review, within this lesson we covered the following:</p>
<ul>
<li>What <strong>floats</strong> are and how to use them to position content</li>
<li>How to <strong>clear</strong> and <strong>contain</strong> floated elements</li>
<li>How to <strong>position</strong> content with inline-block elements</li>
<li>How to remove the white space between inline-block elements</li>
<li>How to uniquely position content with relatively and absolutely positioned elements</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_5:_Positioning_Content"><a href="http://learn.shayhowe.com/html-css/positioning-content/" target="_blank" rel="external">Lesson 5: Positioning Content</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/01/30/Learn%20to%20Code%20HTML%20&%20CSS%204/"/>
    <id>http://baoxiehao.com/2015/01/30/Learn to Code HTML & CSS 4/</id>
    <published>2015-01-30T06:14:00.000Z</published>
    <updated>2015-02-03T06:18:11.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_4:_Opening_the_Box_Model"><a href="http://learn.shayhowe.com/html-css/opening-the-box-model/" target="_blank" rel="external">Lesson 4: Opening the Box Model</a></h1>
<a id="more"></a>

<h2 id="How_Are_Elements_Displayed?">How Are Elements Displayed?</h2>
<p>Before jumping into the box model, it helps to understand how elements are displayed. In Lesson 2 we covered the difference between block-level and inline-level elements. To quickly recap, block-level elements occupy any available width, regardless of their content, and begin on a new line. Inline-level elements occupy only the width their content requires and line up on the same line, one after the other. Block-level elements are generally used for larger pieces of content, such as headings and structural elements. Inline-level elements are generally used for smaller pieces of content, such as a few words selected to be bold or italicized.</p>
<h3 id="Display">Display</h3>
<p>Exactly how elements are displayed—as block-level elements, inline elements, or something else—is determined by the display property. Every element has a default display property value; however, as with all other property values, that value may be overwritten. There are quite a few values for the display property, but the most common are <strong>block</strong>, <strong>inline</strong>, <strong>inline-block</strong>, and <strong>none</strong>.</p>
<p>Things get interesting with the <strong>inline-block</strong> value. Using this value will allow an element to behave as a block-level element, accepting all box model properties (which we’ll cover soon). However, the element will be displayed in line with other elements, and it will not begin on a new line by default.</p>
<p>Using a value of <strong>none</strong> will completely hide an element and render the page as if that element doesn’t exist. Any elements nested within this element will also be hidden.</p>
<pre><code>The Space Between Inline-Block Elements

One important distinction <span class="operator">with</span> inline-block elements is that they are <span class="operator">not</span> always touching, <span class="operator">or</span> displayed directly against <span class="constant">one</span> another. Usually <span class="operator">a</span> small <span class="constant">space</span> will exist between <span class="constant">two</span> inline-block elements. This <span class="constant">space</span>, though perhaps annoying, is <span class="keyword">normal</span>. We’ll discuss why this <span class="constant">space</span> exists <span class="operator">and</span> how <span class="built_in">to</span> remove <span class="keyword">it</span> <span class="operator">in</span> <span class="operator">the</span> next lesson.
</code></pre><h2 id="Working_with_the_Box_Model">Working with the Box Model</h2>
<p>Every element is a rectangular box, and there are several properties that determine the size of that box. The core of the box is defined by the width and height of an element, which may be determined by the display property, by the contents of the element, or by specified width and height properties. padding and then border expand the dimensions of the box outward from the element’s width and height. Lastly, any margin we have specified will follow the border.</p>
<p>Each part of the box model corresponds to a CSS property: <strong>width</strong>, <strong>height</strong>, <strong>padding</strong>, <strong>border</strong>, and <strong>margin</strong>.</p>
<p>By default the box model is additive; thus to determine the actual size of a box we need to take into account padding, borders, and margins for all four sides of the box. Our width not only includes the width property value, but also the size of the left and right padding, left and right borders, and left and right margins.</p>
<h3 id="Width_&amp;_Height">Width &amp; Height</h3>
<p>The default width of an element depends on its display value. Block-level elements have a default width of 100%, consuming the entire horizontal space available. Inline and inline-block elements expand and contract horizontally to accommodate their content. Inline-level elements cannot have a fixed size, thus the width and height properties are only relevant to non-inline elements.</p>
<p>The default height of an element is determined by its content. An element will expand and contract vertically as necessary to accommodate its content.</p>
<pre><code>Sizing <span class="keyword">Inline</span>-Level Elements

Please keep <span class="keyword">in</span> mind that <span class="keyword">inline</span>-level elements will <span class="keyword">not</span> accept the width <span class="keyword">and</span> height properties <span class="keyword">or</span> any values tied <span class="keyword">to</span> them. <span class="keyword">Block</span> <span class="keyword">and</span> <span class="keyword">inline</span>-<span class="keyword">block</span> elements will, however, accept the width <span class="keyword">and</span> height properties <span class="keyword">and</span> their corresponding values.
</code></pre><h3 id="Margin_&amp;_Padding">Margin &amp; Padding</h3>
<p>Depending on the element, browsers may apply default margins and padding to an element to help with legibility and clarity. We will generally see this with text-based elements. The default margins and padding for these elements may differ from browser to browser and element to element. In Lesson 1 we discussed using a <a href="http://learn.shayhowe.com/html-css/building-your-first-web-page/#using-css-resets" target="_blank" rel="external">CSS reset</a> to tone all of these default values down to zero. Doing so allows us to work from the ground up and to specify our own values.</p>
<p>One oddity with the margin property is that <strong>vertical margins, top and bottom, are not accepted by inline-level elements</strong>. These vertical margins are, however, accepted by block-level and inline-block elements.</p>
<p>The padding property, unlike the margin property, works vertically on inline-level elements. This <strong>vertical padding may blend into the line above or below</strong> the given element, but it will be displayed.</p>
<pre><code>Margin &amp; Padding <span class="keyword">on</span> <span class="keyword">Inline</span>-Level Elements

<span class="keyword">Inline</span>-level elements are affected a bit differently than <span class="keyword">block</span> <span class="keyword">and</span> <span class="keyword">inline</span>-<span class="keyword">block</span> elements when it comes <span class="keyword">to</span> margins <span class="keyword">and</span> padding. Margins only work horizontally—left <span class="keyword">and</span> right—<span class="keyword">on</span> <span class="keyword">inline</span>-level elements. Padding works <span class="keyword">on</span> all four sides <span class="keyword">of</span> <span class="keyword">inline</span>-level elements; however, the vertical padding—the top <span class="keyword">and</span> bottom—may bleed <span class="keyword">into</span> the lines above <span class="keyword">and</span> below an element.

Margins <span class="keyword">and</span> padding work like normal <span class="keyword">for</span> <span class="keyword">block</span> <span class="keyword">and</span> <span class="keyword">inline</span>-<span class="keyword">block</span> elements.
</code></pre><h3 id="Margin_&amp;_Padding_Declarations">Margin &amp; Padding Declarations</h3>
<p>The margin and padding properties come in both longhand and shorthand form. </p>
<p>When using the shorthand margin property to set the same value for all four sides of an element, we specify one value:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">20px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>When placing margins of 10 pixels on the <strong>top and bottom</strong> of a <code>&lt;div</code>&gt; and margins of 20 pixels on the <strong>left and right</strong>:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> <span class="number">20px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>When placing margins of 10 pixels on the <strong>top</strong> of a <code>&lt;div</code>&gt;, 20 pixels on the <strong>right</strong>, 0 pixels on the <strong>bottom</strong>, and 15 pixels on the <strong>left</strong>:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">15px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>When we wish to identify only one margin or padding value, it is best to use the longhand properties.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">10px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">6px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<pre><code>Margin &amp; Padding Colors

The margin <span class="operator">and</span> padding properties are completely transparent <span class="operator">and</span> <span class="built_in">do</span> <span class="operator">not</span> accept <span class="keyword">any</span> color values. Being transparent, though, they show <span class="operator">the</span> background colors <span class="operator">of</span> <span class="built_in">relative</span> elements. For margins, we see <span class="operator">the</span> background color <span class="operator">of</span> <span class="operator">the</span> parent <span class="keyword">element</span>, <span class="operator">and</span> <span class="keyword">for</span> padding, we see <span class="operator">the</span> background color <span class="operator">of</span> <span class="operator">the</span> <span class="keyword">element</span> <span class="operator">the</span> padding is applied <span class="built_in">to</span>.
</code></pre><h3 id="Borders">Borders</h3>
<p>Borders fall between the padding and margin, providing an outline around an element. The border property requires three values: <strong>width</strong>, <strong>style</strong>, and <strong>color</strong>. Shorthand values for the border property are stated in that order—width, style, color. In longhand, these three values can be broken up into the <strong>border-width</strong>, <strong>border-style</strong>, and <strong>border-color</strong> properties. These longhand properties are useful for changing, or overwriting, a single border value.</p>
<p>Borders can have different <a href="http://www.quackit.com/html/codes/html_borders.cfm" target="_blank" rel="external">appearances</a>. The most common style values are <strong>solid</strong>, <strong>double</strong>, <strong>dashed</strong>, <strong>dotted</strong>, and <strong>none</strong>, but there are several others to choose from.</p>
<h4 id="Individual_Border_Sides">Individual Border Sides</h4>
<p>If we want, we can make a border appear only on the bottom of an element:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"> <span class="number">6px</span> solid <span class="hexcolor">#949599</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>Additionally, styles for individual border sides may be controlled at an even finer level. For example, if we wish to change only the width of the bottom border we can use the following code:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">border-bottom-width</span>:<span class="value"> <span class="number">12px</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h4 id="Border_Radius">Border Radius</h4>
<p>The border-radius property accepts length units, including <strong>percentages</strong> and <strong>pixels</strong>, that identify the radius by which the corners of an element are to be rounded. A single value will round all four corners of an element equally; two values will round the <strong>top-left/bottom-right</strong> and <strong>top-right/bottom-left</strong> corners in that order; four values will round the <strong>top-left, top-right, bottom-right, and bottom-left</strong> corners in that order.</p>
<p>The border-radius property may also be broken out into longhand properties that allow us to change the radius of individual corners of an element. For example, to change the top-right corner radius of a <code>&lt;div</code>&gt;, the <strong>border-top-right-radius</strong> property can be used.</p>
<h3 id="Box_Sizing">Box Sizing</h3>
<p>Until now the box model has been an additive design. If you set the width of an element to 400 pixels and then add 20 pixels of padding and a border of 10 pixels on every side, the actual full width of the element becomes 460 pixels. Remember, we need to add the width, padding, and border property values together to get the actual, full width of an element.</p>
<p>The box model may, however, be changed to support different calculations. CSS3 introduced the box-sizing property, which allows us to change exactly how the box model works and how an element’s size is calculated. The property accepts three primary values—<strong>content-box</strong>, <strong>padding-box</strong>, and <strong>border-box</strong>—each of which has a slightly different impact on how the box size is calculated.</p>
<h4 id="Content_Box">Content Box</h4>
<p>The content-box value is the default value, leaving the box model as an additive design. If we don’t use the box-sizing property, this will be the <strong>default value</strong> for all elements.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">div</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">-webkit-box-sizing</span>:<span class="value"> content-box</span></span>;</div><div class="line">     <span class="rule"><span class="attribute">-moz-box-sizing</span>:<span class="value"> content-box</span></span>;</div><div class="line">          <span class="rule"><span class="attribute">box-sizing</span>:<span class="value"> content-box</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>Browser-Specific Properties &amp; Values</p>
<pre><code>What are all those hyphens <span class="keyword">and</span> letters <span class="function_start"><span class="keyword">on</span></span> <span class="keyword">the</span> box-sizing <span class="keyword">property</span>?

As CSS3 was introduced, browsers gradually began <span class="keyword">to</span> support different properties <span class="keyword">and</span> values, including <span class="keyword">the</span> box-sizing <span class="keyword">property</span>, <span class="keyword">by</span> way <span class="keyword">of</span> vendor prefixes. As parts <span class="keyword">of</span> <span class="keyword">the</span> CSS3 specification are finalized <span class="keyword">and</span> new browser versions are released, these vendor prefixes become less <span class="keyword">and</span> less relevant. As <span class="property">time</span> goes <span class="function_start"><span class="keyword">on</span></span>, vendor prefixes are unlikely <span class="keyword">to</span> be a problem; however, they still provide support <span class="keyword">for</span> <span class="keyword">some</span> <span class="keyword">of</span> <span class="keyword">the</span> older browsers <span class="keyword">that</span> leveraged them. We may <span class="command">run</span> across them <span class="keyword">from</span> <span class="property">time</span> <span class="keyword">to</span> <span class="property">time</span>, <span class="keyword">and</span> we may even want <span class="keyword">to</span> use them should we wish <span class="keyword">to</span> support older browsers.

For <span class="keyword">reference</span>, <span class="keyword">the</span> most common vendor prefixes are outlined here:

Mozilla Firefox: -moz-
Microsoft Internet Explorer: -ms-
Webkit (Google Chrome <span class="keyword">and</span> Apple Safari): -webkit-
</code></pre><h4 id="Padding_Box">Padding Box</h4>
<p>The padding-box value alters the box model by <strong>including any padding</strong> property values within the width and height of an element. When using the padding-box value, if an element has a width of 400 pixels and a padding of 20 pixels around every side, the actual width will remain 400 pixels.</p>
<h4 id="Border_Box">Border Box</h4>
<p>Lastly, the border-box value alters the box model so that <strong>any border or padding</strong> property values are included within the width and height of an element. When using the border-box value, if an element has a width of 400 pixels, a padding of 20 pixels around every side, and a border of 10 pixels around every side, the actual width will remain 400 pixels.</p>
<h4 id="Picking_a_Box_Size">Picking a Box Size</h4>
<p>Generally speaking, the best box-sizing value to use is <strong>border-box</strong>. The border-box value makes our math much, much easier. If we want an element to be 400 pixels wide, it is, and it will remain 400 pixels wide no matter what padding or border values we add to it.</p>
<p>The only drawback to using the box-sizing property is that as part of the CSS3 specification, it isn’t supported in every browser; it especially lacks support in older browsers.</p>
<h3 id="The_Universal_Selector">The Universal Selector</h3>
<p>In the first step of this exercise we were introduced to the universal selector. In CSS the asterisk, *, is the universal selector, which selects every element. Rather than listing every single element imaginable, we can use the asterisk as a catch-all to select all elements for us.</p>
<p>The :before and :after pseudo-elements also mentioned in this step are elements that can be dynamically generated with CSS. We’re not going to be using these elements within our project; however, when using the universal selector it’s a good practice to also include these pseudo-elements in case they should ever appear.</p>
<h2 id="Summary">Summary</h2>
<p>Learning all the different parts of the box model is no small feat. These concepts, although briefly introduced, take quite a bit of time to fully master, and we’re on the right path toward doing so.</p>
<p>In brief, within this lesson we talked about the following:</p>
<ul>
<li>How different elements are displayed</li>
<li>What the <strong>box model</strong> is and why it’s important</li>
<li>How to change the <strong>size</strong>, including the height and width, of elements</li>
<li>How to add <strong>margin</strong>, <strong>padding</strong>, and <strong>borders</strong> to elements</li>
<li>How to change the box sizing of elements and the effects this has on the box model</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_4:_Opening_the_Box_Model"><a href="http://learn.shayhowe.com/html-css/opening-the-box-model/" target="_blank" rel="external">Lesson 4: Opening the Box Model</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/01/29/Learn%20to%20Code%20HTML%20&%20CSS%203/"/>
    <id>http://baoxiehao.com/2015/01/29/Learn to Code HTML & CSS 3/</id>
    <published>2015-01-29T06:14:00.000Z</published>
    <updated>2015-02-03T06:18:18.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_3:_Getting_to_Know_CSS"><a href="http://learn.shayhowe.com/html-css/getting-to-know-css/" target="_blank" rel="external">Lesson 3: Getting to Know CSS</a></h1>
<a id="more"></a>

<p>First, it’s crucial to know exactly how styles are rendered. Specifically, we’ll need to know how different types of selectors work and how the order of those selectors can affect how our styles are rendered. We’ll also want to understand a few common property values that continually appear within CSS, particularly those that deal with color and length.</p>
<h2 id="The_Cascade">The Cascade</h2>
<p>All styles will cascade from the top of our style sheet to the bottom of our style sheet. There are, however, times where the cascade doesn’t play so nicely. Those times occur when different types of selectors are used and the specificity of those selectors breaks the cascade.</p>
<h2 id="Calculating_Specificity">Calculating Specificity</h2>
<p>Every selector in CSS has a <strong>specificity weight</strong>. A selector’s specificity weight, along with its placement in the cascade, identifies how its styles will be rendered.</p>
<p>In Lesson 1, “Building Your First Web Page,” we talked about three different types of selectors: the type, class, and ID selectors. Each of these selectors has a different specificity weight.</p>
<p>The type selector has the lowest specificity weight and holds a point value of 0-0-1. The class selector has a medium specificity weight and holds a point value of 0-1-0. Lastly, the ID selector has a high specificity weight and holds a point value of 1-0-0. As we can see, specificity points are calculated using three columns. The first column counts ID selectors, the second column counts class selectors, and the third column counts type selectors.</p>
<p>The higher the specificity weight of a selector, the more superiority the selector is given when a styling conflict occurs.</p>
<h2 id="Combining_Selectors">Combining Selectors</h2>
<p>So far we’ve looked at how to use different types of selectors individually, but we also need to know how to use these selectors together. By combining selectors we can be more specific about which element or group of elements we’d like to select.</p>
<p>The best practice is to not prefix a class selector with a type selector. Generally we want to select any element with a given class, not just one type of element.</p>
<h2 id="Layering_Styles_with_Multiple_Classes">Layering Styles with Multiple Classes</h2>
<p>One way to keep the specificity weights of our selectors low is to be as modular as possible, sharing similar styles from element to element. And one way to be as modular as possible is to layer on different styles by using multiple classes.</p>
<p>Elements within HTML can have more than one class attribute value so long as each value is space separated. With that, we can place certain styles on all elements of one sort while placing other styles only on specific elements of that sort.</p>
<p>Let’s take a look at buttons, for example. Say we want all of our buttons to have a font size of 16 pixels, but we want the background color of our buttons to vary depending on where the buttons are used. We can create a few classes and layer them on an element as necessary to apply the desired styles.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"btn btn-danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"btn btn-success"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">a</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class">.btn</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">16px</span></span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.btn-danger</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> red</span></span>;</div><div class="line"><span class="rule">}</span></div><div class="line"><span class="class">.btn-success</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> green</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p>Using <strong>multiple classes</strong>, we can layer on as many styles as we wish, keeping our code lean and our specificity weights low. </p>
<h2 id="Common_CSS_Property_Values">Common CSS Property Values</h2>
<h3 id="Colors">Colors</h3>
<h4 id="Keyword_Colors">Keyword Colors</h4>
<p>Keyword color values are names (such as red, green, or blue) that map to a given color. These keyword names and their corresponding colors are determined by the <a href="http://www.w3.org/TR/css3-color/" target="_blank" rel="external">CSS specification</a>.</p>
<p>While keyword color values are simple in nature, they provide limited options and thus are not the most popular color value choice.</p>
<h4 id="Hexadecimal_Colors">Hexadecimal Colors</h4>
<p>Hexadecimal color values consist of a pound, or hash, #, followed by a three- or six- character figure. The figures use the numbers 0 through 9 and the letters a through f, upper or lower case. These values map to the red, green, and blue color channels.</p>
<p>Six-character hexadecimal values may be written as three-character hexadecimal values when the red, green, and blue color channels each contain a repeating character</p>
<h4 id="RGB_&amp;_RGBa_Colors">RGB &amp; RGBa Colors</h4>
<p>RGB color values are stated using the rgb() function, which stands for red, green, and blue. The function accepts three comma-separated values, each of which is an integer from 0 to 255. A value of 0 would be pure black; a value of 255 would be pure white.</p>
<p>RGB color values may also include an alpha, or transparency, channel by using the rgba() function. The rgba() function requires a fourth value, which must be a number between 0 and 1, including decimals. A value of 0 creates a fully transparent color, meaning it would be invisible, and a value of 1 creates a fully opaque color. Any decimal value in between 0 and 1 would create a semi-transparent color.</p>
<p>RGB color values are becoming more popular, especially due to the ability to create semi-transparent colors using RGBa.</p>
<h4 id="HSL_&amp;_HSLa_Colors">HSL &amp; HSLa Colors</h4>
<p>HSL color values are stated using the hsl() function, which stands for hue, saturation, and lightness. Within the parentheses, the function accepts three comma-separated values, much like rgb().</p>
<p>The first value, the hue, is a unitless number from 0 to 360. The numbers 0 through 360 represent the color wheel, and the value identifies the degree of a color on the color wheel. The second and third values, the saturation and lightness, are percentage values from 0 to 100%. The saturation value identifies how saturated with color the hue is, with 0 being grayscale and 100% being fully saturated. The lightness identifies how dark or light the hue value is, with 0 being completely black and 100% being completely white.</p>
<p>The HSL color value is the newest color value available within CSS. Due to its age and support within browsers, though, it isn’t as widely used as the other values.</p>
<p>For the time being, hexadecimal color values remain the most popular as they are widely supported; though when an alpha channel for transparency is needed, RGBa color values are preferred. These preferences may change in the future, but for now we’ll use <strong>hexadecimal</strong> and <strong>RGBa</strong> color values.</p>
<h3 id="Lengths">Lengths</h3>
<p>Length values within CSS are similar to colors in that there are a handful of different types of values for length, all of which serve distinct purposes. Length values come in two different forms, absolute and relative, each of which uses different units of measurement.</p>
<h4 id="Absolute_Lengths">Absolute Lengths</h4>
<p>Absolute length values are the simplest length values, as they are fixed to a physical measurement, such as inches, centimeters, or millimeters. The most popular absolute unit of measurement is known as the pixel and is represented by the px unit notation.</p>
<p>The pixel is equal to 1/96th of an inch; thus there are 96 pixels in an inch. The exact measurement of a pixel, however, may vary slightly between high-density and low-density viewing devices.</p>
<h4 id="Relative_Lengths">Relative Lengths</h4>
<p>In addition to absolute length values, there are also relative length values. Relative length values are a little more complicated, as they are not fixed units of measurement; they rely on the length of another measurement.</p>
<p><strong>Percentages</strong>, represented by the % unit notation, are one of the most popular relative values. Percentage lengths are defined in relation to the length of another object. For example, to set the width of an element to 50%, we have to know the width of its parent element, the element it is nested within, and then identify 50% of the parent element’s width.</p>
<p>The <strong>em</strong> unit is also a very popular relative value. The em unit is represented by the em unit notation, and its length is calculated based on an element’s font size. A single em unit is equivalent to an element’s font size. So, for example, if an element has a font size of 14 pixels and a width set to 5em, the width would equal 70 pixels (14 pixels multiplied by 5). When a font size is not explicitly stated for an element, the em unit will be relative to the font size of the closest parent element with a stated font size.</p>
<p>There are a lot more absolute and relative units of measurement than those mentioned here. However, these three—pixels, percentages, and em units—are the most popular and the ones we’re going to primarily use.</p>
<h2 id="Summary">Summary</h2>
<p>To briefly recap, within this lesson we’ve discussed the following:</p>
<ul>
<li>How style sheets cascade from the top to the bottom of a file</li>
<li>What <strong>specificity</strong> is and how we can calculate it</li>
<li>How to combine <strong>selectors</strong> to target specific elements or groups of elements</li>
<li>How to use multiple classes on a single element to layer on different styles for more <strong>modular</strong> code</li>
<li>The different <strong>color</strong> values available to use within CSS, including keyword, hexadecimal, RGB, and HSL values</li>
<li>The different <strong>length</strong> values available to use within CSS, including pixels, percentages, and em units</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_3:_Getting_to_Know_CSS"><a href="http://learn.shayhowe.com/html-css/getting-to-know-css/" target="_blank" rel="external">Lesson 3: Getting to Know CSS</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/01/28/Learn%20to%20Code%20HTML%20&%20CSS%202/"/>
    <id>http://baoxiehao.com/2015/01/28/Learn to Code HTML & CSS 2/</id>
    <published>2015-01-28T06:14:00.000Z</published>
    <updated>2015-02-03T06:18:22.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_2:_Getting_to_Know_HTML"><a href="http://learn.shayhowe.com/html-css/getting-to-know-html/" target="_blank" rel="external">Lesson 2: Getting to Know HTML</a></h1>
<a id="more"></a>

<p>In order to start building websites, we need to learn a little about which HTML elements are best used to display different types of content. It’s also important to understand how elements are visually displayed on a web page, as well as what different elements mean semantically.</p>
<h2 id="Semantics_Overview">Semantics Overview</h2>
<p>So what exactly are semantics? Semantics within HTML is the practice of giving content on the page meaning and structure by using the proper element. Semantic code describes the value of content on a page, regardless of the style or appearance of that content.</p>
<h2 id="Identifying_Divisions_&amp;_Spans">Identifying Divisions &amp; Spans</h2>
<p>Divisions, or <code>&lt;div</code>&gt;s, and <code>&lt;span</code>&gt;s are HTML elements that act as containers solely for styling purposes. As generic containers, they do not come with any overarching meaning or semantic value. Paragraphs are semantic in that content wrapped within a <code>&lt;p</code>&gt; element is known and understood as a paragraph. <code>&lt;div</code>&gt;s and <code>&lt;span</code>&gt;s do not hold any such meaning and are simply containers.</p>
<pre><code><span class="keyword">Block</span> vs. <span class="keyword">Inline</span> Elements

Most elements are either <span class="keyword">block</span>- <span class="keyword">or</span> <span class="keyword">inline</span>-level elements. What’s the difference?

<span class="keyword">Block</span>-level elements <span class="keyword">begin</span> <span class="keyword">on</span> a <span class="keyword">new</span> line, stacking one <span class="keyword">on</span> top <span class="keyword">of</span> the other, <span class="keyword">and</span> occupy any available width. <span class="keyword">Block</span>-level elements may be <span class="keyword">nested</span> inside one another <span class="keyword">and</span> may wrap <span class="keyword">inline</span>-level elements. We’ll most commonly see <span class="keyword">block</span>-level elements used <span class="keyword">for</span> larger pieces <span class="keyword">of</span> content, such <span class="keyword">as</span> paragraphs.

<span class="keyword">Inline</span>-level elements <span class="keyword">do</span> <span class="keyword">not</span> <span class="keyword">begin</span> <span class="keyword">on</span> a <span class="keyword">new</span> line. They fall <span class="keyword">into</span> the normal flow <span class="keyword">of</span> a document, lining up one after the other, <span class="keyword">and</span> only maintain the width <span class="keyword">of</span> their content. <span class="keyword">Inline</span>-level elements may be <span class="keyword">nested</span> inside one another; however, they cannot wrap <span class="keyword">block</span>-level elements. We’ll usually see <span class="keyword">inline</span>-level elements <span class="keyword">with</span> smaller pieces <span class="keyword">of</span> content, such <span class="keyword">as</span> a few words.
</code></pre><h3 id="Divisions_&amp;_Spans_Elements">Divisions &amp; Spans Elements</h3>
<p>Both <code>&lt;div</code>&gt;s and <code>&lt;span</code>&gt;s, however, are extremely valuable when building a website in that they give us the ability to apply targeted styles to a contained set of content.</p>
<p>A <code>&lt;div</code>&gt; is a block-level element that is commonly used to identify large groupings of content, and which helps to build a web page’s layout and design. A <code>&lt;span</code>&gt;, on the other hand, is an inline-level element commonly used to identify smaller groupings of text within a block-level element.</p>
<p>We’ll commonly see <code>&lt;div</code>&gt;s and <code>&lt;span</code>&gt;s with class or id attributes for styling purposes. Choosing a class or id attribute value, or name, requires a bit of care. We want to choose a value that refers to the <strong>content</strong> of an element, not necessarily the appearance of an element.</p>
<pre><code>Comments within HTML &amp; CSS

HTML comments start with <span class="comment">&lt;!-- and end with --&gt;</span>. CSS comments start with /* and end with */.
</code></pre><h2 id="Using_Text-Based_Elements">Using Text-Based Elements</h2>
<p>We’ll focus on the more popular elements, including <strong>headings</strong>, <strong>paragraphs</strong>, <strong>bold text</strong> to show importance, and <strong>italics</strong> for emphasis.</p>
<h3 id="Headings">Headings</h3>
<p>Headings are block-level elements, and they come in six different rankings, <code>&lt;h1</code>&gt; through <code>&lt;h6</code>&gt;. Headings help to quickly break up content and establish hierarchy, and they are key identifiers for users reading a page.</p>
<h3 id="Paragraphs">Paragraphs</h3>
<p>Headings are often followed by supporting paragraphs. Paragraphs are defined using the <code>&lt;p</code>&gt; block-level element. Paragraphs can appear one after the other, adding information to a page as desired.</p>
<h3 id="Bold_Text_with_Strong">Bold Text with Strong</h3>
<p>To make text bold and place a strong importance on it, we’ll use the <code>&lt;strong</code>&gt; inline-level element. There are two elements that will bold text for us: the <code>&lt;strong</code>&gt; and <code>&lt;b</code>&gt; elements. It is important to understand the <strong>semantic difference</strong> between the two.</p>
<p>The <code>&lt;strong</code>&gt; element is semantically used to give <strong>strong importance</strong> to text, and is thus the most popular option for bolding text. The <code>&lt;b</code>&gt; element, on the other hand, semantically means to <strong>stylistically offset</strong> text, which isn’t always the best choice for text deserving prominent attention.</p>
<h3 id="Italicize_Text_with_Emphasis">Italicize Text with Emphasis</h3>
<p>To italicize text, thereby placing emphasis on it, we’ll use the <code>&lt;em</code>&gt; inline-level element. As with the elements for bold text, there are two different elements that will italicize text, each with a slightly different semantic meaning.</p>
<p>The <code>&lt;em</code>&gt; element is used semantically to place a <strong>stressed emphasis</strong> on text; it is thus the most popular option for italicizing text. The other option, the <code>&lt;i</code>&gt; element, is used semantically to convey text in an <strong>alternative voice</strong> or tone, almost as if it were placed in quotation marks.</p>
<h2 id="Building_Structure">Building Structure</h2>
<p>For the longest time the structure of a web page was built using divisions. The problem was that divisions provide no semantic value, and it was fairly difficult to determine the intention of these divisions. Fortunately HTML5 introduced new structurally based elements, including the <strong><code>&lt;header</code>&gt;</strong>, <strong><code>&lt;nav</code>&gt;</strong>, <strong><code>&lt;article</code>&gt;</strong>, <strong><code>&lt;section</code>&gt;</strong>, <strong><code>&lt;aside</code>&gt;</strong>, and <strong><code>&lt;footer</code>&gt;</strong> elements.</p>
<p>All of these new elements are intended to give meaning to the organization of our pages and improve our structural semantics. They are all <strong>block-level</strong> elements and do not have any implied position or style. Additionally, all of these elements may be used multiple times per page, so long as each use reflects the proper semantic meaning.</p>
<h3 id="Header">Header</h3>
<p>The <code>&lt;header</code>&gt; element, like it sounds, is used to identify the top of a page, article, section, or other segment of a page. In general, the <code>&lt;header</code>&gt; element may include a heading, introductory text, and even navigation.</p>
<pre><code>&lt;header&gt; vs. &lt;head&gt; vs. &lt;h1&gt; through &lt;h6&gt; Elements

It is easy <span class="built_in">to</span> confuse <span class="operator">the</span> &lt;header&gt; <span class="keyword">element</span> <span class="operator">with</span> <span class="operator">the</span> &lt;head&gt; <span class="keyword">element</span> <span class="operator">or</span> <span class="operator">the</span> heading elements, &lt;h1&gt; through &lt;h6&gt;. They all have different semantic meanings <span class="operator">and</span> should be used according <span class="built_in">to</span> their meanings. For reference…

The &lt;header&gt; <span class="keyword">element</span> is <span class="operator">a</span> structural <span class="keyword">element</span> that outlines <span class="operator">the</span> heading <span class="operator">of</span> <span class="operator">a</span> segment <span class="operator">of</span> <span class="operator">a</span> page. It falls <span class="operator">within</span> <span class="operator">the</span> &lt;body&gt; <span class="keyword">element</span>.

The &lt;head&gt; <span class="keyword">element</span> is <span class="operator">not</span> displayed <span class="command"><span class="keyword">on</span> <span class="title">a</span> <span class="title">page</span> <span class="title">and</span> <span class="title">is</span> <span class="title">used</span> <span class="title">to</span> <span class="title">outline</span> <span class="title">metadata</span>, <span class="title">including</span> <span class="title">the</span> <span class="title">document</span> <span class="title">title</span>, <span class="title">and</span> <span class="title">links</span> <span class="title">to</span> <span class="title">external</span> <span class="title">files</span>. <span class="title">It</span> <span class="title">falls</span> <span class="title">directly</span> <span class="title">within</span> <span class="title">the</span> &lt;<span class="title">html</span>&gt; <span class="title">element</span>.</span>

Heading elements, &lt;h1&gt; through &lt;h6&gt;, are used <span class="built_in">to</span> designate multiple levels <span class="operator">of</span> <span class="keyword">text</span> headings throughout <span class="operator">a</span> page.
</code></pre><h3 id="Navigation">Navigation</h3>
<p>The <code>&lt;nav</code>&gt; element identifies a section of <strong>major navigational links</strong> on a page. The <code>&lt;nav</code>&gt; element should be reserved for primary navigation sections only, such as global navigation, a table of contents, previous/next links, or other noteworthy groups of navigational links.</p>
<p>Most commonly, links included within the <code>&lt;nav</code>&gt; element will link to other pages <strong>within</strong> the same website or to parts of the same web page. Miscellaneous one-off links should not be wrapped within the <code>&lt;nav</code>&gt; element; they should use the anchor element, <code>&lt;a</code>&gt;, and the anchor element alone.</p>
<h3 id="Article">Article</h3>
<p>The <code>&lt;article</code>&gt; element is used to identify a section of independent, self-contained content that may be <strong>independently distributed or reused</strong>. We’ll often use the <code>&lt;article</code>&gt; element to mark up blog posts, newspaper articles, user-submitted content, and the like.</p>
<p>When deciding whether to use the <code>&lt;article</code>&gt; element, we must determine if the content within the element could be replicated elsewhere without any confusion. If the content within the <code>&lt;article</code>&gt; element were removed from the context of the page and placed, for example, within an email or printed work, that content should still make sense.</p>
<h3 id="Section">Section</h3>
<p>The <code>&lt;section</code>&gt; element is used to identify a <strong>thematic grouping</strong> of content, which generally, but not always, includes a heading. The grouping of content within the <code>&lt;section</code>&gt; element may be generic in nature, but it’s useful to identify all of the content as related.</p>
<p>The <code>&lt;section</code>&gt; element is commonly used to break up and provide hierarchy to a page.</p>
<pre><code>Deciding Between &lt;article&gt;, &lt;section&gt;, <span class="operator">or</span> &lt;<span class="operator">div</span>&gt; Elements

At times <span class="keyword">it</span> becomes fairly difficult <span class="built_in">to</span> decide which <span class="keyword">element</span>—&lt;article&gt;, &lt;section&gt;, <span class="operator">or</span> &lt;<span class="operator">div</span>&gt;—is <span class="operator">the</span> best <span class="keyword">element</span> <span class="keyword">for</span> <span class="operator">the</span> job based <span class="command"><span class="keyword">on</span> <span class="title">its</span> <span class="title">semantic</span> <span class="title">meaning</span>. <span class="title">The</span> <span class="title">trick</span> <span class="title">here</span>, <span class="title">as</span> <span class="title">with</span> <span class="title">every</span> <span class="title">semantic</span> <span class="title">decision</span>, <span class="title">is</span> <span class="title">to</span> <span class="title">look</span> <span class="title">at</span> <span class="title">the</span> <span class="title">content</span>.</span>

Both <span class="operator">the</span> &lt;article&gt; <span class="operator">and</span> &lt;section&gt; elements contribute <span class="built_in">to</span> <span class="operator">a</span> document’s structure <span class="operator">and</span> help <span class="built_in">to</span> outline <span class="operator">a</span> document. If <span class="operator">the</span> content is being grouped solely <span class="keyword">for</span> styling purposes <span class="operator">and</span> doesn’t provide <span class="built_in">value</span> <span class="built_in">to</span> <span class="operator">the</span> outline <span class="operator">of</span> <span class="operator">a</span> document, use <span class="operator">the</span> &lt;<span class="operator">div</span>&gt; <span class="keyword">element</span>.

If <span class="operator">the</span> content adds <span class="built_in">to</span> <span class="operator">the</span> document outline <span class="operator">and</span> <span class="keyword">it</span> can be independently redistributed <span class="operator">or</span> syndicated, use <span class="operator">the</span> &lt;article&gt; <span class="keyword">element</span>.

If <span class="operator">the</span> content adds <span class="built_in">to</span> <span class="operator">the</span> document outline <span class="operator">and</span> represents <span class="operator">a</span> thematic group <span class="operator">of</span> content, use <span class="operator">the</span> &lt;section&gt; <span class="keyword">element</span>.
</code></pre><h3 id="Aside">Aside</h3>
<p>The <code>&lt;aside</code>&gt; element holds content, such as sidebars, inserts, or brief explanations, that is tangentially related to the content surrounding it. When used within an <article> element, for example, the <code>&lt;aside</code>&gt; element may identify content related to the author of the article.</article></p>
<p>We may instinctively think of an <code>&lt;aside</code>&gt; element as an element that appears off to the left or right side of a page. We have to remember, though, that all of the structural elements, including the <code>&lt;aside</code>&gt; element, are <strong>block-level</strong> elements and as such will appear on a new line, occupying the full available width of the page or of the element they are nested within, also known as their parent element.</p>
<h3 id="Footer">Footer</h3>
<p>The <code>&lt;footer</code>&gt; element identifies the closing or end of a page, article, section, or other segment of a page. Generally the <code>&lt;footer</code>&gt; element is found at the bottom of its parent. Content within the <code>&lt;footer</code>&gt; element should be relative information and should not diverge from the document or section it is included within.</p>
<pre><code>Encoding Special Characters

Special characters include various punctuation marks, accented letters, <span class="keyword">and</span> symbols. <span class="keyword">When</span> typed directly into HTML, they can be misunderstood <span class="keyword">or</span> mistaken <span class="keyword">for</span> the wrong <span class="typename">character</span>; thus they need <span class="keyword">to</span> be encoded.

Each encoded <span class="typename">character</span> will <span class="keyword">begin</span> <span class="keyword">with</span> an ampersand, &amp;, <span class="keyword">and</span> <span class="keyword">end</span> <span class="keyword">with</span> a semicolon, ;. What falls between the ampersand <span class="keyword">and</span> semicolon <span class="keyword">is</span> a <span class="typename">character</span>’s unique encoding, be it a name <span class="keyword">or</span> numeric encoding. <span class="keyword">For</span> reference, a long list <span class="keyword">of</span> <span class="typename">character</span> encodings may be found at [Copy Paste <span class="typename">Character</span>](http://copypastecharacter.com/).
</code></pre><h2 id="Creating_Hyperlinks">Creating Hyperlinks</h2>
<p>Along with text, one of the core components of the Internet is the hyperlink, which provides the ability to link from one web page or resource to another. Hyperlinks are established using the anchor, <code>&lt;a</code>&gt;, <strong>inline-level</strong> element. In order to create a link from one page (or resource) to another, the href attribute, known as a hyperlink reference, is required. The href attribute value identifies the destination of the link.</p>
<pre><code>Wrapping Block-Level Elements <span class="operator">with</span> Anchors

By nature <span class="operator">the</span> anchor <span class="keyword">element</span>, &lt;<span class="operator">a</span>&gt;, is <span class="operator">an</span> inline <span class="keyword">element</span>, <span class="operator">and</span>, according <span class="built_in">to</span> web standards, inline-level elements may <span class="operator">not</span> <span class="operator">wrap</span> block-level elements. With <span class="operator">the</span> introduction <span class="operator">of</span> HTML5, however, anchor elements specifically have permission <span class="built_in">to</span> <span class="operator">wrap</span> either block-, inline-, <span class="operator">or</span> <span class="keyword">any</span> other level elements. This is <span class="operator">a</span> break <span class="built_in">from</span> <span class="operator">the</span> standard convention, but <span class="keyword">it</span>’s permissible <span class="operator">in</span> order <span class="built_in">to</span> enable entire blocks <span class="operator">of</span> content <span class="command"><span class="keyword">on</span> <span class="title">a</span> <span class="title">page</span> <span class="title">to</span> <span class="title">become</span> <span class="title">links</span>.</span>
</code></pre><h3 id="Linking_to_an_Email_Address">Linking to an Email Address</h3>
<p>Occasionally we may want to create a hyperlink to our email address—for example, hyperlink text that says “Email Me,” which when clicked opens a user’s default email client and pre-populates part of an email. At a minimum the email address to which the email is being sent is populated; other information such as a subject line and body text may also be included.</p>
<p>For example, a link to shay@awesome.com with the subject of “Reaching Out” and body text of “How are you” would require an href attribute value of mailto:shay@awesome.com?subject=Reaching%20Out&amp;body=How%20are%20you.</p>
<h3 id="Opening_Links_in_a_New_Window">Opening Links in a New Window</h3>
<p>One feature available with hyperlinks is the ability to determine where a link opens when clicked. Typically, links open in the same window from which they are clicked; however, links may also be opened in new windows.</p>
<p>To open <a href="http://shayhowe.com/" target="_blank" rel="external">http://shayhowe.com/</a> in a new window, the code would look like this:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://shayhowe.com/"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</span>Shay Howe<span class="tag">&lt;/<span class="title">a</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Linking_to_Parts_of_the_Same_Page">Linking to Parts of the Same Page</h3>
<p>Periodically we’ll see hyperlinks that link to part of the same page the link appears on. A common example of these same-page links are “Back to top” links that return a user to the top of a page.</p>
<p>We can create an on-page link by first setting an id attribute on the element we wish to link to, then using the value of that id attribute within an anchor element’s href attribute.</p>
<p>Using the “Back to top” link as an example, our code for this same-page link would look like the following:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">body</span> <span class="attribute">id</span>=<span class="value">"top"</span>&gt;</span></div><div class="line">  ...</div><div class="line">  <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#top"</span>&gt;</span>Back to top<span class="tag">&lt;/<span class="title">a</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Summary">Summary</h2>
<p>Semantics, as discussed within this lesson, are essential for providing our HTML with structure and meaning. Moving forward we’ll periodically introduce new elements, all of which will come with their own semantic meaning. It is the meaning of all of these elements that will provide our content with the most value.</p>
<p>Once again, in this lesson we covered the following:</p>
<ul>
<li>What semantics are and why they are important</li>
<li><strong><div></div></strong>s and <strong><spans></spans></strong>s, and the difference between <strong>block- and inline-level elements</strong></li>
<li>Which text-based elements best represent the content of a page</li>
<li>The HTML5 structural elements and how to define the <strong>structure and organization</strong> of our content and page</li>
<li>How to use <strong>hyperlinks</strong> to navigate between web pages or websites</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_2:_Getting_to_Know_HTML"><a href="http://learn.shayhowe.com/html-css/getting-to-know-html/" target="_blank" rel="external">Lesson 2: Getting to Know HTML</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn to Code HTML & CSS]]></title>
    <link href="http://baoxiehao.com/2015/01/27/Learn%20to%20Code%20HTML%20&%20CSS%201/"/>
    <id>http://baoxiehao.com/2015/01/27/Learn to Code HTML & CSS 1/</id>
    <published>2015-01-27T06:14:00.000Z</published>
    <updated>2015-02-03T06:18:27.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Lesson_1:_Building_Your_First_Web_Page"><a href="http://learn.shayhowe.com/html-css/building-your-first-web-page/" target="_blank" rel="external">Lesson 1: Building Your First Web Page</a></h1>
<a id="more"></a>

<h2 id="What_Are_HTML_&amp;_CSS?">What Are HTML &amp; CSS?</h2>
<p>HTML, HyperText Markup Language, gives content structure and meaning by defining that content as, for example, headings, paragraphs, or images. CSS, or Cascading Style Sheets, is a presentation language created to style the appearance of content—using, for example, fonts or colors.</p>
<p>The two languages—HTML and CSS—are independent of one another and should remain that way. CSS should not be written inside of an HTML document and vice versa. As a rule, HTML will always represent content, and CSS will always represent the appearance of that content.</p>
<h2 id="Understanding_Common_HTML_Terms">Understanding Common HTML Terms</h2>
<p>The three common HTML terms you should begin with are <strong>elements</strong>, <strong>tags</strong>, and <strong>attributes</strong>.</p>
<h3 id="Elements">Elements</h3>
<p>Elements are designators that define the structure and content of objects within a page. Some of the more frequently used elements include multiple levels of headings (identified as h1 through h6 elements) and paragraphs (identified as the <code>&lt;p</code>&gt; element); the list goes on to include the <code>&lt;a</code>&gt;, &lt;<code>div</code>&gt;, <code>&lt;span</code>&gt;, <code>&lt;strong</code>&gt;, and <code>&lt;em</code>&gt; elements, and many more.</p>
<p>Thus, an element will look like the following:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">a</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Tags">Tags</h3>
<p>The use of less-than and greater-than angle brackets surrounding an element creates what is known as a tag. Tags most commonly occur in pairs of opening and closing tags.</p>
<p>So, anchor tags will look a bit like this:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">a</span>&gt;</span>...<span class="tag">&lt;/<span class="title">a</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Attributes">Attributes</h3>
<p>Attributes are properties used to provide additional information about an element. The most common attributes include the <strong>id</strong> attribute, which identifies an element; the <strong>class</strong> attribute, which classifies an element; the <strong>src</strong> attribute, which specifies a source for embeddable content; and the <strong>href</strong> attribute, which provides a hyperlink reference to a linked resource.</p>
<p>For example, an <code>&lt;a</code>&gt; element including an href attribute would look like the following:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://shayhowe.com/"</span>&gt;</span>Shay Howe<span class="tag">&lt;/<span class="title">a</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Setting_Up_the_HTML_Document_Structure">Setting Up the HTML Document Structure</h2>
<p>All HTML documents have a required structure that includes the following declaration and elements: <code>&lt;!DOCTYPE html</code>&gt;, <code>&lt;html</code>&gt;, <code>&lt;head</code>&gt;, and <code>&lt;body</code>&gt;.</p>
<p>All of the visible content within the web page will fall within the <code>&lt;body</code>&gt; element. A breakdown of a typical HTML document structure looks like this:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="title">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>This is a web page.<span class="tag">&lt;/<span class="title">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="Code_Validation">Code Validation</h3>
<p>No matter how careful we are when writing our code, we will inevitably make mistakes. Thankfully, when writing HTML and CSS we have validators to check our work. The W3C has built both <a href="http://validator.w3.org/" target="_blank" rel="external">HTML</a> and <a href="http://jigsaw.w3.org/css-validator/" target="_blank" rel="external">CSS</a> validators that will scan code for mistakes. Validating our code not only helps it render properly across all browsers, but also helps teach us the best practices for writing code.</p>
<h2 id="Understanding_Common_CSS_Terms">Understanding Common CSS Terms</h2>
<p>In addition to HTML terms, there are a few common CSS terms you will want to familiarize yourself with. These terms include <strong>selectors</strong>, <strong>properties</strong>, and <strong>values</strong>. As with the HTML terminology, the more you work with CSS, the more these terms will become second nature.</p>
<h3 id="Selectors">Selectors</h3>
<p>As elements are added to a web page, they may be styled using CSS. A selector designates exactly which element or elements within our HTML to target and apply styles (such as color, size, and position) to. Selectors may include a combination of different qualifiers to select unique elements, all depending on how specific we wish to be.</p>
<p>Selectors generally target an <strong>attribute value</strong>, such as an id or class value, or target the <strong>type of element</strong>, such as <code>&lt;h1</code>&gt; or <code>&lt;p</code>&gt;.</p>
<h3 id="Properties">Properties</h3>
<p>Once an element is selected, a property determines the styles that will be applied to that element. Property names fall after a selector, within the curly brackets, {}, and immediately preceding a colon.</p>
<h3 id="Values">Values</h3>
<p>So far we’ve selected an element with a selector and determined what style we’d like to apply with a property. Now we can determine the behavior of that property with a value. Values can be identified as the text between the colon and semicolon.</p>
<h2 id="Working_with_Selectors">Working with Selectors</h2>
<p>Selectors, as previously mentioned, indicate which HTML elements are being styled. It is important to fully understand how to use selectors and how they can be leveraged. The first step is to become familiar with the different types of selectors. We’ll start with the most common selectors: <strong>type</strong>, <strong>class</strong>, and <strong>ID</strong> selectors.</p>
<h3 id="Type_Selectors">Type Selectors</h3>
<p>Type selectors target elements by their element type. For example, should we wish to target all division elements, <code>&lt;div</code>&gt;, we would use a type selector of div.</p>
<p>HTML</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span>          </div><div class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div></pre></td></tr></table></figure>

<p>CSS</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">div { ... }</div></pre></td></tr></table></figure>

<h3 id="Class_Selectors">Class Selectors</h3>
<p>Class selectors allow us to select an element based on the element’s class attribute value. Class selectors are a little more specific than type selectors, as they select a particular group of elements rather than all elements of one type.</p>
<p>Class selectors allow us to apply the same styles to different elements at once by using the same class attribute value across multiple elements.</p>
<p>Within CSS, classes are denoted by a leading period, <strong>.</strong>, followed by the class attribute value.</p>
<p>HTML</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"awesome"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"awesome"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">p</span>&gt;</span></div></pre></td></tr></table></figure>

<p>CSS</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.awesome { ... }</div></pre></td></tr></table></figure>

<h3 id="ID_Selectors">ID Selectors</h3>
<p>ID selectors are even more precise than class selectors, as they target only one unique element at a time. Just as class selectors use an element’s class attribute value as the selector, ID selectors use an element’s id attribute value as a selector.</p>
<p>Regardless of which type of element they appear on, id attribute values can only be used <strong>once per page</strong>. If used they should be reserved for significant elements.</p>
<p>HTML</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"shayhowe"</span>&gt;</span>...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div></pre></td></tr></table></figure>

<p>CSS</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#shayhowe { ... }</div></pre></td></tr></table></figure>

<h3 id="Additional_Selectors">Additional Selectors</h3>
<p>Selectors are extremely powerful, and the selectors outlined here are the most common selectors we’ll come across. These selectors are also only the beginning. Many more <a href="http://learn.shayhowe.com/advanced-html-css/complex-selectors/" target="_blank" rel="external">advanced selectors</a> exist and are readily available. When you feel comfortable with these selectors, don’t be afraid to look into some of the more advanced selectors.</p>
<h2 id="Referencing_CSS">Referencing CSS</h2>
<p>In order to get our CSS talking to our HTML, we need to reference our CSS file within our HTML. The best practice for referencing our CSS is to include all of our styles in a single external style sheet, which is referenced from within the <code>&lt;head</code>&gt; element of our HTML document. Using a single external style sheet allows us to use the same styles across an entire website and quickly make changes sitewide.</p>
<p>Consider the following example of an HTML document <code>&lt;head</code>&gt; element that references a single external style sheet.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"main.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="Using_CSS_Resets">Using CSS Resets</h2>
<p>Every web browser has its own default styles for different elements. How Google Chrome renders headings, paragraphs, lists, and so forth may be different from how Internet Explorer does. To ensure cross-browser compatibility, CSS resets have become widely used.</p>
<p>There are a bunch of different resets available to use, all of which have their own fortes. One of the most popular resets is <a href="http://meyerweb.com/eric/tools/css/reset/" target="_blank" rel="external">Eric Meyer’s reset</a>, which has been adapted to include styles for the new HTML5 elements.</p>
<p>If you are feeling a bit more adventurous, there is also Normalize.css, created by Nicolas Gallagher. <a href="http://necolas.github.io/normalize.css/" target="_blank" rel="external">Normalize.css</a> focuses not on using a hard reset for all common elements, but instead on setting common styles for these elements. It requires a stronger understanding of CSS, as well as awareness of what you’d like your styles to be.</p>
<pre><code>Cross-Browser Compatibility &amp; Testing

As previously mentioned, different browsers render elements <span class="operator">in</span> different ways. It’s important <span class="built_in">to</span> recognize <span class="operator">the</span> <span class="built_in">value</span> <span class="operator">in</span> cross-browser compatibility <span class="operator">and</span> testing. Websites don’t need <span class="built_in">to</span> look exactly <span class="operator">the</span> same <span class="operator">in</span> every browser, but they should be <span class="built_in">close</span>. Which browsers you wish <span class="built_in">to</span> support, <span class="operator">and</span> <span class="built_in">to</span> what degree, is <span class="operator">a</span> decision you will need <span class="built_in">to</span> make based <span class="command"><span class="keyword">on</span> <span class="title">what</span> <span class="title">is</span> <span class="title">best</span> <span class="title">for</span> <span class="title">your</span> <span class="title">website</span>.</span>
</code></pre><h2 id="Summary">Summary</h2>
<p>So far, so good! We’ve taken a few big steps in this lesson.</p>
<p>Just think, you now know the basics of HTML and CSS. As we continue and you spend more time writing HTML and CSS, you’ll become much more comfortable with the two languages.</p>
<p>To recap, so far we’ve covered the following:</p>
<ul>
<li>The <strong>difference</strong> between HTML and CSS</li>
<li>Getting acquainted with <strong>HTML elements, tags, and attributes</strong></li>
<li>Setting up the structure of your first web page</li>
<li>Getting acquainted with CSS selectors, properties, and values</li>
<li>Working with <strong>CSS selectors</strong></li>
<li><strong>Referencing CSS</strong> in your HTML</li>
<li>The value of <strong>CSS resets</strong></li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="Lesson_1:_Building_Your_First_Web_Page"><a href="http://learn.shayhowe.com/html-css/building-your-first-web-page/" target="_blank" rel="external">Lesson 1: Building Your First Web Page</a></h1>
]]></summary>
    
      <category term="HTML" scheme="http://baoxiehao.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://baoxiehao.com/tags/CSS/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[好文聚沙成塔]]></title>
    <link href="http://baoxiehao.com/2015/01/01/%E5%A5%BD%E6%96%87%E8%81%9A%E6%B2%99%E6%88%90%E5%A1%94/"/>
    <id>http://baoxiehao.com/2015/01/01/好文聚沙成塔/</id>
    <published>2015-01-01T12:42:44.000Z</published>
    <updated>2015-02-03T06:39:23.000Z</updated>
    <content type="html"><![CDATA[<p>分享那些值得记录的好文章</p>
<a id="more"></a>

<h1 id="技术类">技术类</h1>
<p><a href="http://get.jobdeer.com/744.get" target="_blank" rel="external">如何写好技术简历 —— 实例、模板及工具</a><br><a href="http://fabiensanglard.net/git_code_review/index.php" target="_blank" rel="external">Git源码赏析三篇（综述、由来、结构）</a><br><a href="http://blog.jobbole.com/66227/" target="_blank" rel="external">jQuery之父：每天都写点代码</a><br><a href="http://codecondo.com/coding-challenges/" target="_blank" rel="external">14个帮你锻炼脑思维的代码编程挑战网站</a><br><a href="http://overapi.com/" target="_blank" rel="external">在线API查询大全</a></p>
<h2 id="Web">Web</h2>
<p><a href="http://learn.shayhowe.com/html-css/" target="_blank" rel="external">Learn to Code HTML &amp; CSS</a><br><a href="http://leaverou.github.io/prefixfree/" target="_blank" rel="external">-prefix-free Break free from CSS prefix hell</a><br><a href="http://www.cnblogs.com/lhb25/" target="_blank" rel="external">梦想天空</a><br><a href="http://www.cnblogs.com/lhb25/p/node-js-tutorials-for-beginners.html" target="_blank" rel="external">最佳的 Node.js 学习教程和资料书籍</a><br><a href="http://fex.baidu.com/blog/2014/05/build-performance-monitor-in-7-days/" target="_blank" rel="external">7天打造前端性能监控系统</a></p>
<h2 id="Lisp">Lisp</h2>
<p><a href="http://www.quicklisp.org/beta/" target="_blank" rel="external">Quicklisp</a><br><a href="http://8arrow.org/caveman/" target="_blank" rel="external">Caveman 2: The real web framework</a></p>
<h2 id="Erlang">Erlang</h2>
<p><a href="http://learnyousomeerlang.com/contents" target="_blank" rel="external">Learn You Some Erlang</a><br><a href="http://www.erlang.se/doc/programming_rules.shtml" target="_blank" rel="external">Programming Rules</a><br><a href="http://erlide.org/" target="_blank" rel="external">Erlang IDE</a><br><a href="http://ignatov.github.io/intellij-erlang/" target="_blank" rel="external">Erlang IntelliJ</a><br><a href="http://www.cnblogs.com/me-sa/category/304370.html" target="_blank" rel="external">Erlang Blog</a><br><a href="http://ferd.ca/" target="_blank" rel="external">Erlang Blog</a><br><a href="http://erldocs.com" target="_blank" rel="external">Erlang Doc</a><br><a href="http://erlangcentral.org/wiki/index.php/" target="_blank" rel="external">Erlang Wiki</a></p>
<h1 id="设计类">设计类</h1>
<p><a href="http://ksmx.me/blog/2014/05/02/usability-and-user-experience-design-websites/" target="_blank" rel="external">用户体验和产品设计网站精选（私家收藏分享）- 康上明学</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>分享那些值得记录的好文章</p>
]]></summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Alfred Workflow 初识]]></title>
    <link href="http://baoxiehao.com/2014/08/20/Alfred-Workflow%E5%88%9D%E8%AF%86/"/>
    <id>http://baoxiehao.com/2014/08/20/Alfred-Workflow初识/</id>
    <published>2014-08-20T01:07:34.000Z</published>
    <updated>2014-08-24T13:06:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p><strong>Alfred</strong>作为<strong>Mac</strong>下排名第一的应用，功能极其强大，可以快速的搜索本地程序、使用搜索引擎搜索、查询词典、发送邮件、查找文件、剪贴板 管理、音乐控制等等功能。特别是<strong>V2</strong>版本新增了<strong>Workflow</strong>功能，全球各地的开发者为其创造了数百个workflow插件，更是极大地扩展和丰富了它的威力。</p>
<h2 id="基础篇">基础篇</h2>
<p>用<strong>Alfred</strong>可以用来做什么，可以直接替换掉系统自带的<strong>Spotlight</strong>吗？继续阅读之前，建议先看看这篇<a href="http://www.cnbeta.com/articles/203640.htm" target="_blank" rel="external">介绍文章</a>。</p>
<p>好了，看完Alfred的基础功能介绍，是不是瞬间那些Windows上的那些应用快速启动程序弱爆了？那下面就让我们看看有了<strong>Workflow</strong>之后还可以做什么？</p>
<a id="more"></a>

<h2 id="进阶篇">进阶篇</h2>
<p><a href="http://www.deanishe.net/alfred-workflow" target="_blank" rel="external">deanishe</a>为<strong>Alfred Workflow</strong>添加了<strong>Python</strong>框架库支持，自定义Workflow仅需要通过Python完成输入和输出的转换，最后输出到Alfred即可。</p>
<p>我想写的第一个自定义Alfred Workflow是支持在Alfred中直接进行关键词搜索并直接展示搜索结果，那需要怎么完成呢？简单起见，第一个版本仅支持百度搜索。那么，就需要先通过Python语言完成百度搜索的关键词请求，对返回结果进行解析（包括搜索结果页标题、描述和链接），然后再通过以上的Python框架库将结果输出到Alfred中即可。</p>
<h3 id="百度搜索解析">百度搜索解析</h3>
<p>【1】首先，进行百度关键词搜索并解析结果格式：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"result c-container "</span> <span class="attribute">id</span>=<span class="value">"2"</span> <span class="attribute">srcid</span>=<span class="value">"1599"</span> <span class="attribute">tpl</span>=<span class="value">"se_com_default"</span></span></div><div class="line"><span class="attribute">data-click</span>=<span class="value">"{'rsv_bdr':'0' ,'rsv_cd':'pt:40520'}"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">class</span>=<span class="value">"t"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"favurl"</span> <span class="attribute">style</span>=<span class="value">"background-image:url(http://t11.baidu.com/it/u=1884976882,3278791703&fm=58)"</span></span></div><div class="line">        <span class="attribute">fav-url</span>=<span class="value">"http://t11.baidu.com/it/u=1884976882,3278791703&fm=58"</span> <span class="attribute">data-click</span>=<span class="value">"{</span></div><div class="line">        'F':'778317EA',</div><div class="line">        'F1':'9D73F1C4',</div><div class="line">        'F2':'4CA6DD6B',</div><div class="line">        'F3':'54E5A43F',</div><div class="line">        'T':'1408714037',</div><div class="line">        'y':'FBF3F4B7'</div><div class="line">        }" <span class="attribute">href</span>=<span class="value">"//www.baidu.com/link?url=KcDt3TeRrK8URziCD1sFtajJ9oLJSq-j5_WYXqhN0oa"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</div><div class="line">            百度<span class="tag">&lt;<span class="title">em</span>&gt;</span>新闻<span class="tag">&lt;/<span class="title">em</span>&gt;</span>搜索——全球最大的中文<span class="tag">&lt;<span class="title">em</span>&gt;</span>新闻<span class="tag">&lt;/<span class="title">em</span>&gt;</span>平台</div><div class="line">        <span class="tag">&lt;/<span class="title">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">h3</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"c-abstract"</span>&gt;</span></div><div class="line">        百度<span class="tag">&lt;<span class="title">em</span>&gt;</span>新闻<span class="tag">&lt;/<span class="title">em</span>&gt;</span>是包含海量资讯的<span class="tag">&lt;<span class="title">em</span>&gt;</span>新闻<span class="tag">&lt;/<span class="title">em</span>&gt;</span>服务平台,真实反映每时每刻的<span class="tag">&lt;<span class="title">em</span>&gt;</span>新闻<span class="tag">&lt;/<span class="title">em</span>&gt;</span>热点。您可以搜索<span class="tag">&lt;<span class="title">em</span>&gt;</span>新闻<span class="tag">&lt;/<span class="title">em</span>&gt;</span>事件、热点话题、人物动态、产品资讯等,快速了解它们的最新进展。</div><div class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line">    ...</div></pre></td></tr></table></figure>

<p>【2】接着就可以根据搜索结果尝试编码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> BeautifulSoup <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(key)</span>:</span></div><div class="line">    <span class="comment"># 百度搜索网址，可能需要加入搜索请求来源混淆，避免百度屏蔽</span></div><div class="line">    search_url = <span class="string">'http://www.baidu.com/s?wd=key'</span></div><div class="line"></div><div class="line">    <span class="comment"># 获取搜索结果</span></div><div class="line">    req = requests.get(search_url.replace(<span class="string">'key'</span>, key))</div><div class="line">    soup = BeautifulSoup(req.content)</div><div class="line"></div><div class="line">    <span class="comment"># 解析搜索结果</span></div><div class="line">    tables = soup.findAll(<span class="string">'div'</span>, {<span class="string">'class'</span>: <span class="string">'result c-container '</span>})</div><div class="line">    results = []</div><div class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> tables:</div><div class="line">        part1 = table.find(attrs={<span class="string">'class'</span>: <span class="string">'t'</span>})</div><div class="line">        title = removeTag(part1.a.renderContents(), <span class="string">'&lt;em&gt;'</span>)</div><div class="line">        url = part1.a[<span class="string">'href'</span>]</div><div class="line">        part2 = table.find(<span class="string">'div'</span>, {<span class="string">'class'</span>: <span class="string">'c-abstract'</span>})</div><div class="line">        desc = removeTag(part2.renderContents(), <span class="string">'&lt;em&gt;'</span>)</div><div class="line">        results.append((title, url, desc))</div><div class="line">        <span class="keyword">print</span> <span class="string">'标题：{0}\n描述：{1}\n链接：{2}\n'</span>.format(title, desc, url)</div><div class="line">    <span class="keyword">return</span> results</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">removeTag</span><span class="params">(text, tag)</span>:</span></div><div class="line">    <span class="string">'''去除搜索结果的标签符号，比如强调符号em'''</span></div><div class="line">    <span class="keyword">return</span> text.replace(tag, <span class="string">''</span>).replace(tag[<span class="number">0</span>:<span class="number">1</span>] + <span class="string">'/'</span> + tag[<span class="number">1</span>:], <span class="string">''</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</div><div class="line">    search(<span class="string">'新闻'</span>)</div></pre></td></tr></table></figure>

<h3 id="整合Workflow流程">整合Workflow流程</h3>
<p>【1】新建空白Workflow</p>
<p><img src="/imgs/wf-new-blank.png" alt=""></p>
<p>【2】编辑Workflow描述信息</p>
<p><img src="/imgs/wf-info.png" alt=""></p>
<p>【3】创建Script输入</p>
<p><img src="/imgs/wf-new-script.png" alt=""></p>
<p>【4】编辑Script信息</p>
<p><img src="/imgs/wf-detail.png" alt=""></p>
<p>【5】基于<strong>Workflow Python</strong>框架进行编码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># encoding: utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> workflow <span class="keyword">import</span> Workflow, ICON_WEB, web</div><div class="line"><span class="keyword">from</span> BeautifulSoup <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_baidu_search</span><span class="params">(query)</span>:</span></div><div class="line">    url = <span class="string">u'http://www.baidu.com/s'</span></div><div class="line">    r = web.get(url, {<span class="string">'wd'</span>: query})</div><div class="line"></div><div class="line">    r.raise_for_status()</div><div class="line"></div><div class="line">    <span class="keyword">return</span> parse_baidu_results(BeautifulSoup(r.content))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_baidu_results</span><span class="params">(soup)</span>:</span></div><div class="line">    tables = soup.findAll(<span class="string">'div'</span>, {<span class="string">'class'</span>: <span class="string">'result c-container '</span>})</div><div class="line">    results = []</div><div class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> tables:</div><div class="line">        part1 = table.find(attrs={<span class="string">'class'</span>: <span class="string">'t'</span>})</div><div class="line">        title = part1.a.renderContents()</div><div class="line">        title = wf.decode(removeTag(title, <span class="string">'em'</span>))</div><div class="line">        <span class="comment"># 使用wf.logger或者print(text, file=sys.stderr)来打印log，否则会打乱从标准输出获取的XML内容</span></div><div class="line">        wf.logger.debug(title)</div><div class="line">        url = <span class="string">u'http:'</span> + wf.decode(part1.a[<span class="string">'href'</span>])</div><div class="line">        part2 = table.find(<span class="string">'div'</span>, {<span class="string">'class'</span>: <span class="string">'c-abstract'</span>})</div><div class="line">        desc = part2.renderContents()</div><div class="line">        desc = wf.decode(removeTag(desc, <span class="string">'em'</span>))</div><div class="line">        results.append((title, desc, url))</div><div class="line">    <span class="keyword">return</span> results</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">removeTag</span><span class="params">(text, tag)</span>:</span></div><div class="line">    <span class="string">'''去除搜索结果的标签符号，比如强调符号em'''</span></div><div class="line">    startTag = <span class="string">'&lt;'</span> + tag + <span class="string">'&gt;'</span></div><div class="line">    endTag = <span class="string">'&lt;/'</span> + tag + <span class="string">'&gt;'</span></div><div class="line">    <span class="keyword">return</span> text.replace(startTag, <span class="string">''</span>).replace(endTag, <span class="string">''</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(wf)</span>:</span></div><div class="line">    query = wf.args[<span class="number">0</span>]</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">return</span> request_baidu_search(query)</div><div class="line"></div><div class="line">    results = wf.cached_data(<span class="string">u'results'</span> + query, wrapper, max_age=<span class="number">60</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> results:</div><div class="line">        wf.add_item(</div><div class="line">            title = result[<span class="number">0</span>],</div><div class="line">            subtitle = result[<span class="number">1</span>],</div><div class="line">            arg = result[<span class="number">2</span>],</div><div class="line">            valid = <span class="keyword">True</span>,</div><div class="line">            icon = ICON_WEB)</div><div class="line">    wf.send_feedback()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    wf = Workflow()</div><div class="line">    sys.exit(wf.run(main))</div></pre></td></tr></table></figure>

<p>【6】运行测试，如果出错可以选择<strong>Debug</strong>：</p>
<p><img src="/imgs/wf-debug.png" alt=""></p>
<p>测试结果如图：</p>
<p><img src="/imgs/wf-search-demo.png" alt=""></p>
<p>【7】为搜索结果添加打开网页动作，这样点击搜索结果项就可以跳到链接详情：</p>
<p><img src="/imgs/wf-open-url.png" alt=""></p>
<p><img src="/imgs/wf-link-url.png" alt=""></p>
<p>于是，第一个Alfred Workflow就完成了，后续再进行进一步的优化吧，待续~~</p>
<h2 id="附Workflow参考链接">附Workflow参考链接</h2>
<p><a href="http://www.alfredforum.com/topic/2030-workflow-libraries-and-helpers/" target="_blank" rel="external">Alfred Workflow Libraries and Helpers</a><br><a href="http://www.alfredworkflow.com/" target="_blank" rel="external">Alfred Workflow List</a><br><a href="http://www.alfredforum.com/" target="_blank" rel="external">Alfred Forum</a></p>
]]></content>
    <summary type="html"><![CDATA[<h2 id="简介">简介</h2>
<p><strong>Alfred</strong>作为<strong>Mac</strong>下排名第一的应用，功能极其强大，可以快速的搜索本地程序、使用搜索引擎搜索、查询词典、发送邮件、查找文件、剪贴板 管理、音乐控制等等功能。特别是<strong>V2</strong>版本新增了<strong>Workflow</strong>功能，全球各地的开发者为其创造了数百个workflow插件，更是极大地扩展和丰富了它的威力。</p>
<h2 id="基础篇">基础篇</h2>
<p>用<strong>Alfred</strong>可以用来做什么，可以直接替换掉系统自带的<strong>Spotlight</strong>吗？继续阅读之前，建议先看看这篇<a href="http://www.cnbeta.com/articles/203640.htm" target="_blank" rel="external">介绍文章</a>。</p>
<p>好了，看完Alfred的基础功能介绍，是不是瞬间那些Windows上的那些应用快速启动程序弱爆了？那下面就让我们看看有了<strong>Workflow</strong>之后还可以做什么？</p>
]]></summary>
    
      <category term="Alfred" scheme="http://baoxiehao.com/tags/Alfred/"/>
    
      <category term="Python" scheme="http://baoxiehao.com/tags/Python/"/>
    
      <category term="Geek" scheme="http://baoxiehao.com/tags/Geek/"/>
    
      <category term="工具" scheme="http://baoxiehao.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GoAgent翻墙记]]></title>
    <link href="http://baoxiehao.com/2014/08/19/GoAgent%E7%BF%BB%E5%A2%99%E8%AE%B0/"/>
    <id>http://baoxiehao.com/2014/08/19/GoAgent翻墙记/</id>
    <published>2014-08-19T05:10:38.000Z</published>
    <updated>2014-08-23T08:10:37.000Z</updated>
    <content type="html"><![CDATA[<p>三步走：申请AppId；安装GoAgent；安装代理软件</p>
<a id="more"></a>

<h2 id="申请Google_AppId">申请<a href="http://appengine.google.com" target="_blank" rel="external">Google AppId</a></h2>
<p>很简单，步骤略</p>
<h2 id="安装GoAgent依赖库">安装GoAgent依赖库</h2>
<p>执行终端命令：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ruby</span> -<span class="keyword">e</span> <span class="string">"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"</span></div><div class="line">brew install libevent</div><div class="line">sudo easy_install pip</div><div class="line">sudo ARCHFLAGS=-Wno-error=unused-<span class="keyword">command</span>-<span class="built_in">line</span>-<span class="keyword">argument</span>-hard-error-in-future pip install cython</div><div class="line">sudo ARCHFLAGS=-Wno-error=unused-<span class="keyword">command</span>-<span class="built_in">line</span>-<span class="keyword">argument</span>-hard-error-in-future pip install greenlet</div><div class="line">sudo pip install geven</div><div class="line">sudo ARCHFLAGS=-Wno-error=unused-<span class="keyword">command</span>-<span class="built_in">line</span>-<span class="keyword">argument</span>-hard-error-in-future easy_install pycrypto</div></pre></td></tr></table></figure>

<h2 id="安装GoAgent（翻墙）">安装GoAgent（翻墙）</h2>
<p>【1】下载<a href="http://code.google.com/p/goagent/" target="_blank" rel="external">goagent</a><br>【2】解压后修改<strong>local/proxy.ini</strong>文件中的<strong>appid</strong>值为申请的个人<strong>appid</strong>，若希望使用<strong>google dns server</strong>，则修改<strong>[dns]</strong>节中的<strong>enabled</strong>值为<strong>1</strong><br>【3】进入<strong>server</strong>目录，执行终端命令『sudo python uploader.zip』</p>
<h2 id="安装SwitchySharp（代理设置）">安装SwitchySharp（代理设置）</h2>
<h3 id="安装SwitchySharp">安装<a href="https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm" target="_blank" rel="external">SwitchySharp</a></h3>
<p>该扩展插件是针对Chrome浏览器来进行代理自动切换，其他浏览器用户可以参考<a href="https://code.google.com/p/goagent/wiki/InstallGuide" target="_blank" rel="external">GoAgent部署教程</a></p>
<h3 id="设置SwitchySharp">设置<a href="https://code.google.com/p/switchysharp/wiki/SwitchySharp_GFW_List_2" target="_blank" rel="external">SwitchySharp</a></h3>
<p>如上图，在Chrome浏览器中点击SwitchySharp图标，选择『选项』进入配置页面，在『情景模式』页中『新建情景模式』并取名（图中为『HOME』），选择『手动配置』，其中『HTTP代理』填入『127.0.0.1』，端口填入『8087』，勾选『对所有协议均使用相同的代理服务器』，然后保存关闭，最后，在在Chrome浏览器中点击SwitchySharp图标，选择以上创建的『情景模式』（图中为『HOME』）。</p>
<p><img src="/imgs/switchy-sharp-cfg.png" alt=""></p>
<p><img src="/imgs/switchy-sharp-on.png" alt=""></p>
<h2 id="开始翻墙">开始翻墙</h2>
<p>进入<strong>goagent/local</strong>目录，执行终端命令『sudo python proxy.py』，开始你的翻墙之旅吧~</p>
<p>如果提示错误『Address already in use』，那么执行命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">sudo</span> lsof -i:<span class="number">8087</span></div><div class="line">$ kill goagent-pid   (goagent-pid指的是上一个命令罗列出的pid列)</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<p>三步走：申请AppId；安装GoAgent；安装代理软件</p>
]]></summary>
    
      <category term="Geek" scheme="http://baoxiehao.com/tags/Geek/"/>
    
      <category term="工具" scheme="http://baoxiehao.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac OS 入门]]></title>
    <link href="http://baoxiehao.com/2014/08/10/Mac%20OS%E5%85%A5%E9%97%A8/"/>
    <id>http://baoxiehao.com/2014/08/10/Mac OS入门/</id>
    <published>2014-08-10T03:20:26.000Z</published>
    <updated>2014-08-30T05:14:09.000Z</updated>
    <content type="html"><![CDATA[<p>8月5号晚上下单2014新款13.3寸 Macbook Pro Retina（MGX72），8月8号到手，卖家包装非常不给力，幸好只是包装的一角挤压了，本本无恙。想来刚接触新的系统一定是非常不习惯的，虽然Windows系统用起来也不是很爽，但是毕竟用久了，一些常用的工具需要快速找到替代品。于是，就有了这篇关于Mac入门的文章，主要介绍系统基础工具以及一些进阶神器，边用边写，慢慢更新吧。</p>
<a id="more"></a>

<h2 id="Mac装机必备">Mac装机必备</h2>
<p>刚到手Mac的时候，就连输入法的切换键都不知道，切换输入中英文是相当的痛苦。于是，想想还是先把装机必备的一些东东先搞定吧，另外稍微熟悉下系统操作。以下罗列的不一定全是需要安装的软件，也可能是系统自带的一些工具。</p>
<ol>
<li>系统偏好设置 —— 触控板：熟悉系统基本多点触控操作，系统自带了每个操作对应的手势视频，相当酷炫和便利。</li>
<li>安装配置Jitouch：扩展更多的多点触控手势，比如浏览器中的上下标签切换，当前标签关闭，窗口最大化以及当前应用关闭等常用操作，不过每个人的配置不同，这里就先不贴出自用的配置。</li>
<li>百度输入法：系统自带的输入法相当不习惯，不能逗号切换下一页的词语选择，也不能一键切换中英文，更关键的是，手机上一直用百度输入法，实在好用，Mac上也有百度输入法，不用没有理由。只是，已发现一个小bug是在QQ聊天窗口中输入文字的时候，当前行的文本有可能会上下跃动。</li>
<li>LilyView：超好用的图片浏览器，自带的iPhoto不错，只是所有的图片都是要先导入（要复制占空间啊有木有）才方便浏览，而系统自带的图片查看器也实在用不习惯。LilyView在安装的时候会提示你是否要设置为默认图片浏览器，直接确认并勾选图片格式即可。在浏览的时候，可以双指左右滑动切换上下张图片，还可以双击图片进入全屏浏览模式，而且可以手势缩放和移动，非常给力。</li>
<li>Sublime Text 3：编辑神器，没有之一。</li>
<li>Alfred：比系统自带Spotlight更为强大的系统工具，可以快速打开应用，快速搜索文件名称（甚至文件内容），快速执行网络搜索等，而在付费版中，还有更高级的工作流功能。</li>
<li>XtraFinder：Finder增强工具，标签式浏览文件，<strong>Command + U</strong>进入双栏模式，移动复制超级方便。</li>
</ol>
<h2 id="Safari插件">Safari插件</h2>
<ol>
<li><a href="http://opnir.com/261/safari-multifunction-plugin-glims" target="_blank" rel="external">多功能插件 Glims</a></li>
<li><a href="http://irising.me/2012/09/15375/#more-15375" target="_blank" rel="external">自动Html5视频播放 ClickToPluginForChina</a></li>
<li><a href="http://canisbos.com/customreader" target="_blank" rel="external">阅读器扩展 CustomReader</a></li>
<li><a href="http://awesomescreenshot.com" target="_blank" rel="external">高级截图 Awesome Screenshot</a></li>
<li><a href="https://getpocket.com/safari/" target="_blank" rel="external">稍后阅读 Pocket</a></li>
<li><a href="https://adblockplus.org/zh_CN/safari" target="_blank" rel="external">广告拦截 Adblock Plus</a></li>
</ol>
<h2 id="Mac开发工具">Mac开发工具</h2>
<p>用Mac做开发的话，首先不可少的一定是命令行工具，其次才是其他的开发软件或者套件。</p>
<p>【1】<strong>brew</strong> —— 和<strong>Ubuntu</strong>的<strong>apt-get</strong>一样，自动搜索安装应用，简单方便。</p>
<p>安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | <span class="built_in">sudo</span> tar xvz -C/usr/local --strip <span class="number">1</span></div></pre></td></tr></table></figure>

<p>使用：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ brew install wget</div><div class="line">$ brew uninstall wget</div><div class="line">$ brew search wget</div></pre></td></tr></table></figure>

<p>【2】<a href="iterm2.com">iTerm2</a> —— 比系统自带Terminal强大太多。</p>
<p>【3】配置Sublime Text 3</p>
<p>下载<a href="https://sublime.wbond.net/Package%20Control.sublime-package" target="_blank" rel="external">Package Control.sublime-package</a>，然后选择菜单栏<strong>Sublime Text——Preferences——Browse Packages</strong>，将下载文件放入刚打开的文件夹中。重启后就可以选择菜单栏<strong>Tools——Command Palette</strong>（或者快捷键<strong>Shift+Command+P</strong>），输入<strong>Install Package</strong>进行插件安装。</p>
<p>【4】升级Python3</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="shebang">#!/bin/sh</span></div><div class="line"></div><div class="line">[ <span class="variable">$#</span> <span class="operator">-ne</span> <span class="number">1</span> ] && { <span class="built_in">echo</span> <span class="variable">$0</span> <span class="string">' python_version'</span>; <span class="keyword">exit</span>; }</div><div class="line"></div><div class="line">PYVERSION=<span class="variable">$1</span></div><div class="line"></div><div class="line">PYPATH=/System/Library/Frameworks/Python.framework/Versions/<span class="variable">${PYVERSION}</span></div><div class="line">PYCURR=/System/Library/Frameworks/Python.framework/Versions/Current</div><div class="line"><span class="built_in">sudo</span> mv /Library/Frameworks/Python.framework/Versions/<span class="variable">${PYVERSION}</span> /System/Library/Frameworks/Python.framework/Versions/</div><div class="line"><span class="built_in">sudo</span> chown -R root:wheel <span class="variable">${PYPATH}</span></div><div class="line"><span class="built_in">sudo</span> rm <span class="variable">${PYCURR}</span></div><div class="line"><span class="built_in">sudo</span> ln <span class="operator">-s</span> <span class="variable">${PYPATH}</span> <span class="variable">${PYCURR}</span></div><div class="line"><span class="built_in">sudo</span> rm /usr/bin/{pydoc,python,pythonw,python-config}</div><div class="line"><span class="built_in">sudo</span> ln <span class="operator">-s</span> <span class="variable">${PYPATH}</span>/bin/pydoc<span class="variable">${PYVERSION}</span> /usr/bin/pydoc</div><div class="line"><span class="built_in">sudo</span> ln <span class="operator">-s</span> <span class="variable">${PYPATH}</span>/bin/python<span class="variable">${PYVERSION}</span> /usr/bin/python</div><div class="line"><span class="built_in">sudo</span> ln <span class="operator">-s</span> <span class="variable">${PYPATH}</span>/bin/pythonw<span class="variable">${PYVERSION}</span> /usr/bin/pythonw</div><div class="line"><span class="built_in">sudo</span> ln <span class="operator">-s</span> <span class="variable">${PYPATH}</span>/bin/python<span class="variable">${PYVERSION}</span>m-config /usr/bin/python-config</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"export PATH=/System/Library/Frameworks/Python.framework/Versions/<span class="variable">${PYVERSION}</span>/bin"</span><span class="string">':${PATH}'</span> &gt;&gt; ~/.bash_profile</div></pre></td></tr></table></figure>

<p>安装<strong>requests</strong>和<strong>BeautifulSoup</strong>：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">sudo</span> pip install requests</div><div class="line">$ <span class="built_in">sudo</span> pip install BeautifulSoup4</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<p>8月5号晚上下单2014新款13.3寸 Macbook Pro Retina（MGX72），8月8号到手，卖家包装非常不给力，幸好只是包装的一角挤压了，本本无恙。想来刚接触新的系统一定是非常不习惯的，虽然Windows系统用起来也不是很爽，但是毕竟用久了，一些常用的工具需要快速找到替代品。于是，就有了这篇关于Mac入门的文章，主要介绍系统基础工具以及一些进阶神器，边用边写，慢慢更新吧。</p>
]]></summary>
    
      <category term="Mac" scheme="http://baoxiehao.com/tags/Mac/"/>
    
      <category term="操作系统" scheme="http://baoxiehao.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Log]]></title>
    <link href="http://baoxiehao.com/2014/06/12/Android-Log/"/>
    <id>http://baoxiehao.com/2014/06/12/Android-Log/</id>
    <published>2014-06-12T12:47:13.000Z</published>
    <updated>2014-06-13T02:27:38.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Android_Log的普遍问题">Android Log的普遍问题</h2>
<hr>
<p>看过很多<strong>Android</strong>原生应用或者第三方应用的<strong>log</strong>记录都是相当的不规范，导致在控制台查看某个应用或者某个<strong>tag</strong>的<strong>log</strong>输出是相当痛苦的事情。虽然你可以用<strong>grep</strong>命令来过滤指定的<strong>log</strong>，但是你记得住自己的应用有多少个<strong>log tag</strong>吗？本文就来谈谈如何通过简单的两步走，实现应用<strong>log</strong>的规范精致输出。</p>
<a id="more"></a>

<h2 id="一种简单解决方案">一种简单解决方案</h2>
<hr>
<p><strong>Android</strong>的<strong>log</strong>级别大部分都是<strong>D</strong>，少数是<strong>I/W/E</strong>或者<strong>V</strong>。于是，其实可以写个<strong>Logger</strong>的工具类，里面包含了应用所有用到的<strong>log tag</strong>，然后在其他需要<strong>log</strong>的类中声明私有静态字符串变量<strong>TAG</strong>时直接引用<strong>Logger</strong>中声明的<strong>log tag</strong>，这样在一个地方统一管理<strong>log tag</strong>，规范且不易疏漏和出错。<strong>Logger</strong>中的<strong>log tag</strong>包含统一的规则，比如你的应用是<strong>Calendar</strong>，那么你的<strong>log tag</strong>大致就可以写成：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG_TEST = <span class="string">"Cal:D:Test"</span>;</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG_UI = <span class="string">"Cal:D:Ui"</span>;</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG_MODEL = <span class="string">"Cal:D:Model"</span>;</div></pre></td></tr></table></figure>

<p>而需要用到<strong>log</strong>的类中的<strong>TAG</strong>变量就可以直接引用以上<strong>log tag</strong>：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = Logger.TAG_UI;</div></pre></td></tr></table></figure>

<p>于是，你在过滤你的应用<strong>log</strong>时就可以直接输入如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logcat-color | grep <span class="string">"Cal:[V|D]"</span></div></pre></td></tr></table></figure>

<p>其中，<a href="https://github.com/marshall/logcat-color" target="_blank" rel="external">logcat-color</a>是<strong>adb logcat</strong>的替代命令——多彩颜色显示、可配置性高。</p>
<h2 id="进一步小扩展">进一步小扩展</h2>
<hr>
<p>另外还有一个需要考虑的<strong>log</strong>问题是，有一些<strong>log</strong>在开发调试的时候可以极大方便地观测程序运行状态和定位程序问题，但是如果在对外的发布版本中如果也输出，一般是比较恼人的，而且如果<strong>log</strong>过于频繁,容易冲掉其他应用的<strong>log</strong>。大部分应用采用的解决方式是在代码中声明一个<strong>DEBUG</strong>开关，在开发的时候设置为<strong>true</strong>，在发布的时候重新设置为<strong>false</strong>。但是，有时候，你是会忘记这件事情的，而且更糟糕的是，当你关闭了开关之后，如果程序出现问题了，你还得重新安装打开了<strong>DEBUG</strong>开关的应用版本，然后才能重新抓取<strong>log</strong>，最后根据<strong>log</strong>定位问题。</p>
<p>其实，可以通过<strong>adb</strong>命令来动态开关<strong>log tag</strong>，需要的时候开启就能输出指定的<strong>log</strong>，默认是关闭的：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb shell setprop log.tag.Cal:V VERBOSE</div><div class="line">adb shell setprop log.tag.Cal:V ASSERT</div></pre></td></tr></table></figure>

<p>其中，第一个命令是将<strong>Cal:V</strong>的<strong>log tag</strong>开启，第二个命令是将其关闭（因为一般不会用到<strong>ASSERT</strong>级别的<strong>log</strong>，所以就相当于关闭了）。</p>
<p>因此，我们可以将需要动态开关的<strong>log tag</strong>都声明为<strong>Cal:V</strong>开头的，然后在输出<strong>log</strong>之前进行判断：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG_VERBOSE = <span class="string">"Cal:V"</span>;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLoggable</span>(String tag) {</div><div class="line">    <span class="keyword">if</span> (tag.contains(TAG_VERBOSE)) {</div><div class="line">        <span class="keyword">return</span> Log.isLoggable(TAG_VERBOSE, Log.VERBOSE);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">d</span>(String tag, String msg) {</div><div class="line">    <span class="keyword">if</span> (isLoggable(tag)) {</div><div class="line">        android.util.Log.d(tag, msg);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="美好Log生活">美好Log生活</h2>
<p>现在，只要遵循<strong>log</strong>前缀规则还有<strong>log</strong>开关判断，就可以动态开关并输出精美的应用<strong>log</strong>了，生活顿时美好了许多。</p>
]]></content>
    <summary type="html"><![CDATA[<h2 id="Android_Log的普遍问题">Android Log的普遍问题</h2>
<hr>
<p>看过很多<strong>Android</strong>原生应用或者第三方应用的<strong>log</strong>记录都是相当的不规范，导致在控制台查看某个应用或者某个<strong>tag</strong>的<strong>log</strong>输出是相当痛苦的事情。虽然你可以用<strong>grep</strong>命令来过滤指定的<strong>log</strong>，但是你记得住自己的应用有多少个<strong>log tag</strong>吗？本文就来谈谈如何通过简单的两步走，实现应用<strong>log</strong>的规范精致输出。</p>
]]></summary>
    
      <category term="Android" scheme="http://baoxiehao.com/tags/Android/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android DrawerLayout]]></title>
    <link href="http://baoxiehao.com/2014/05/23/Android-Drawerlayout/"/>
    <id>http://baoxiehao.com/2014/05/23/Android-Drawerlayout/</id>
    <published>2014-05-23T10:49:20.000Z</published>
    <updated>2014-05-24T12:12:06.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<hr>
<p>在<strong>2013 google IO</strong>当天，Android团队更新了<a href="https://github.com/danielesegato/android-support-library-archive" target="_blank" rel="external"><strong>Android Support Library</strong></a>，在新版本<strong>V13</strong>中新加入了几个比较重要的功能：</p>
<ul>
<li>添加<strong>DrawerLayout</strong>控件，支持创建<strong>Navigation Drawer</strong>模式。可以设置从左边划出菜单或者右边，也可以左右菜单同时存在。</li>
<li>添加<strong>SlidingPaneLayout</strong>控件来支持各种屏幕上的摘要、详情界面模式。比如<strong>Gmail</strong>邮件列表和单个邮件详情界面。当在手机上显示的时候，邮件列表和详情界面分别为两个界面；当在平板上显示的时候，则为一个界面。</li>
<li>添加<strong>ActionBarDrawerToggle</strong>工具类，方便把<strong>DrawerLayout</strong>和<strong>ActionBar</strong>功能结合起来。</li>
</ul>
<a id="more"></a>

<p><br><br></p>
<h2 id="DrawerLayout">DrawerLayout</h2>
<hr>
<h3 id="创建DrawerLayout">创建DrawerLayout</h3>
<p>在需要抽屉菜单的界面，用<strong>DrawerLayout</strong>作为界面根控件。在<strong>DrawerLayout</strong>里第一个View为当前界面主内容；第二个和第三个View为抽屉菜单内容。如果当前界面只需要一个抽屉菜单，则第三个View可以省略。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.DrawerLayout</span></span></div><div class="line">    <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/drawer_layout"</span></div><div class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></div><div class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</div><div class="line">    <span class="comment">&lt;!-- The main content view --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">FrameLayout</span></span></div><div class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/content_frame"</span></div><div class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></div><div class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span> /&gt;</div><div class="line">    <span class="comment">&lt;!-- The navigation drawer --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">ScrollView</span> <span class="attribute">android:id</span>=<span class="value">"@+id/left_drawer"</span></span></div><div class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"240dp"</span></div><div class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></div><div class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.DrawerLayout</span>&gt;</span></div></pre></td></tr></table></figure>

<p>注意：</p>
<ol>
<li>界面主内容的View必须是<strong>DrawerLayout</strong>的第一个子View，原因在于XML布局文件中的View顺序为Android系统中的z-ordering顺序，而抽屉必须出现在内容之上。</li>
<li>界面主内容的View宽度和高度要设置为和<strong>DrawerLayout</strong>一样，原因在于当抽屉菜单不可见的时候，界面内容代表整个界面UI。</li>
<li>抽屉菜单（上面的<strong>ScrollView</strong>）必须使用<strong>android:layout_gravity=”start”</strong>（当在LTR语言运行时菜单出现在左侧，而RTL语言运行时菜单出现在右侧)。</li>
<li>抽屉菜单的宽度应该不超过屏幕宽度，这样用户可以在菜单打开的时候看到部分内容界面。</li>
</ol>
<p><br><br></p>
<h3 id="初始化DrawerLayout">初始化DrawerLayout</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initDrawLayout</span>() {</div><div class="line">    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);</div><div class="line">    mDrawerLayout.setDrawerListener(<span class="keyword">new</span> DrawerListener() {</div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerClosed</span>(View view) {</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerOpened</span>(View view) {</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerSlide</span>(View view, <span class="keyword">float</span> slideOffset) {</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="annotation">@Override</span></div><div class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawerStateChanged</span>(<span class="keyword">int</span> state) {</div><div class="line">        }</div><div class="line">    });</div><div class="line">}</div></pre></td></tr></table></figure>

<p><br><br></p>
<h3 id="开关DrawerLayout">开关DrawerLayout</h3>
<p>在用<strong>DrawerLayout</strong>实现侧滑菜单后，一般情况下就不需要额外显示菜单了，也就是可以把原先的菜单响应事件处理为显示侧滑菜单。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="annotation">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPrepareOptionsMenu</span>(Menu menu) {</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="annotation">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyUp</span>(<span class="keyword">int</span> keyCode, KeyEvent event) {</div><div class="line">    <span class="keyword">if</span> (KeyEvent.KEYCODE_MENU == keyCode && !event.isLongPress()) {</div><div class="line">        toggleDrawerLayout();</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.onKeyUp(keyCode, event);</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">toggleDrawerLayout</span>() {</div><div class="line">    <span class="keyword">if</span> (mDrawerLayout != <span class="keyword">null</span>) {</div><div class="line">        <span class="keyword">if</span> (mDrawerLayout.isDrawerOpen(Gravity.START)) {</div><div class="line">            mDrawerLayout.closeDrawers();</div><div class="line">        } <span class="keyword">else</span> {</div><div class="line">            mDrawerLayout.openDrawer(Gravity.START);</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p><br><br></p>
<h3 id="响应DrawerLayout点击">响应DrawerLayout点击</h3>
<p>因为<strong>DrawerLayout</strong>中可以放置任意的View，所以响应事件就参照原有的<strong>findViewById</strong>加上<strong>setOnClickListener</strong>即可。当然，如果闲<strong>findViewById</strong>太繁琐，那么可以看看<a href="http://baoxiehao.com/2014/05/16/android%20easyadapter/" target="_blank" rel="external"><strong>Android EasyAdapter</strong></a>是否符合你的胃口。</p>
<p><br><br></p>
<h2 id="注意事项">注意事项</h2>
<hr>
<p><strong>[1]</strong> 如果在源码编译中引用<strong>jar包</strong>需要在项目的<strong>Android.mk</strong>中添加：</p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="constant">LOCAL_STATIC_JAVA_LIBRARIES</span> += android-support-v13</div><div class="line"><span class="constant">LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES</span> += android-support-v13:libs/android-support-v13.jar</div></pre></td></tr></table></figure>

<p><strong>[2]</strong> 如果使用了代码混淆，并且编译提示android support相关的warning的话，要在proguard.flags文件中添加：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-dontwarn android.support.<span class="keyword">*</span><span class="keyword">*</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<hr>
<p>在<strong>2013 google IO</strong>当天，Android团队更新了<a href="https://github.com/danielesegato/android-support-library-archive" target="_blank" rel="external"><strong>Android Support Library</strong></a>，在新版本<strong>V13</strong>中新加入了几个比较重要的功能：</p>
<ul>
<li>添加<strong>DrawerLayout</strong>控件，支持创建<strong>Navigation Drawer</strong>模式。可以设置从左边划出菜单或者右边，也可以左右菜单同时存在。</li>
<li>添加<strong>SlidingPaneLayout</strong>控件来支持各种屏幕上的摘要、详情界面模式。比如<strong>Gmail</strong>邮件列表和单个邮件详情界面。当在手机上显示的时候，邮件列表和详情界面分别为两个界面；当在平板上显示的时候，则为一个界面。</li>
<li>添加<strong>ActionBarDrawerToggle</strong>工具类，方便把<strong>DrawerLayout</strong>和<strong>ActionBar</strong>功能结合起来。</li>
</ul>
]]></summary>
    
      <category term="Android" scheme="http://baoxiehao.com/tags/Android/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客优化]]></title>
    <link href="http://baoxiehao.com/2014/05/17/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    <id>http://baoxiehao.com/2014/05/17/Hexo博客优化/</id>
    <published>2014-05-17T02:06:30.000Z</published>
    <updated>2014-08-24T13:05:31.000Z</updated>
    <content type="html"><![CDATA[<h2 id="MarkDown编辑器">MarkDown编辑器</h2>
<hr>
<p>最低要求：所见所得，云端同步。</p>
<ul>
<li><a href="https://www.zybuluo.com/" target="_blank" rel="external"><strong>Cmd Markdown编辑器</strong></a> —— 本来期待很高，也非常好用，但是反复提示邮箱没有验证，暂时放弃了。</li>
<li><a href="https://stackedit.io/" target="_blank" rel="external"><strong>StackEdit</strong></a> —— 功能基本符合，可以用Google Drive同步，只是预览效果和Hexo最终效果还是有差异，比如代码段的效果，可能是Hexo的代码效果还没配置好。</li>
<li><a href="http://dillinger.io/" target="_blank" rel="external"><strong>Dillinger</strong></a> —— 暂未使用，但是目测还不错，不过貌似网络访问速度比较缓慢。</li>
<li><a href="http://maxiang.info/" target="_blank" rel="external"><strong>马克印象</strong></a> —— Evernote官方出品，值得一试。</li>
</ul>
<a id="more"></a>

<p><br><br></p>
<h2 id="优化内容">优化内容</h2>
<hr>
<h3 id="Freemind主题"><strong>Freemind主题</strong></h3>
<p><strong>[1]</strong> <a href="https://github.com/wzpan/hexo-theme-freemind/" target="_blank" rel="external"><strong>下载主题</strong></a>，在<strong>hexo</strong>根目录打开<strong>Git Bash</strong>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/wzpan/hexo-theme-freemind.git themes/freemind</div><div class="line">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>

<p><strong>[2]</strong> <strong>应用主题</strong>，编辑根目录<strong>_config.yml</strong>文件：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">theme</span>: <span class="string">freemind</span></div></pre></td></tr></table></figure>

<p><strong>[3]</strong> 配置<strong>导航菜单</strong></p>
<p>编辑主题下的<strong>_config.yml</strong>文件（其中的<strong>icon</strong>可以在<a href="http://fortawesome.github.io/Font-Awesome/icons/" target="_blank" rel="external"><strong>Font Awesome Icons</strong></a>上找到）：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  -<span class="ruby"> <span class="symbol">title:</span> 归档</span></div><div class="line">    url: archives</div><div class="line">    intro: 文章归档</div><div class="line">    icon: fa fa-archive</div><div class="line">  -<span class="ruby"> <span class="symbol">title:</span> 分类</span></div><div class="line">    url: categories</div><div class="line">    intro: 文章分类</div><div class="line">    icon: fa fa-folder</div><div class="line">  -<span class="ruby"> <span class="symbol">title:</span> 标签</span></div><div class="line">    url: tags</div><div class="line">    intro: 所有标签</div><div class="line">    icon: fa fa-tags</div><div class="line">  -<span class="ruby"> <span class="symbol">title:</span> 关于</span></div><div class="line">    url: about</div><div class="line">    intro: 我的足迹</div><div class="line">    icon: fa fa-user</div></pre></td></tr></table></figure>

<p>生成对应的导航页面（<strong>freemind</strong>主题默认已经有<strong>archives</strong>页面，还差<strong>categories</strong>、<strong>tags</strong>和<strong>about</strong>页面）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo new page <span class="string">"categorires"</span></div><div class="line">hexo new page <span class="string">"tags"</span></div><div class="line">hexo new page <span class="string">"about"</span></div></pre></td></tr></table></figure>

<p>在<strong>hexo\source\</strong>下会生成对应的<strong>categories</strong>、<strong>tags</strong>和<strong>about</strong>目录，编辑里面的<strong>index.md</strong>文件对应各个页面的实际内容：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 分类</div><div class="line">layout: categories</div><div class="line"><span class="header">date: 2014-05-17 23:21:34</span></div><div class="line">---</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 标签</div><div class="line">layout: tags</div><div class="line"><span class="header">date: 2014-05-17 23:22:55</span></div><div class="line">---</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 关于我</div><div class="line">layout: about</div><div class="line"><span class="header">date: 2014-05-17 10:37:46</span></div><div class="line">---</div></pre></td></tr></table></figure>

<p><strong>[4]</strong> 更多<strong>文章属性</strong></p>
<ul>
<li><strong>description</strong> - 在文章顶部显示内容介绍</li>
<li><strong>feature</strong> - 在文章列表页面显示概要图片</li>
<li><strong>toc</strong> - 在文章起始处显示文章内容目录</li>
</ul>
<p>例如：</p>
<figure class="highlight md"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">title: Tag Plugins</div><div class="line">date: 2014-03-16 10:17:16</div><div class="line">tags: plugins</div><div class="line">categories: Docs</div><div class="line">description: Introduce tag plugins in freemind.</div><div class="line">feature: images/tag-plugins/plugins.jpg</div><div class="line">toc: true</div></pre></td></tr></table></figure>

<p><strong>[5]</strong> 配置图片大小</p>
<p>默认图片大小是自适应的，有可能会很大，造成页面显示不美观，可以在<strong>/themes/freemind/source/css/style.css</strong>中找到<strong>img</strong>节增加最大宽度限制：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">img</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">max-width</span>:<span class="value"> <span class="number">97.5%</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">15px</span> auto</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> auto</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> auto</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">max-width</span>:<span class="value"> <span class="number">60%</span></span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<p><br><br></p>
<h3 id="页面结构">页面结构</h3>
<p><strong>[1]</strong> <strong>主页文章显示摘要</strong></p>
<p>编辑<strong>md文件</strong>的时候，在要作为摘要的文字后面添加<strong>&lt;!—more—&gt;</strong>即可。</p>
<p><strong>[2]</strong> 安装<strong>sitemap</strong>和<strong>rss</strong>：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="operator"><span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span></div><div class="line">$ npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></div></pre></td></tr></table></figure>

<p>激活配置：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Plugins:</div><div class="line">  -<span class="ruby"> hexo-generator-feed</span></div><div class="line">  -<span class="ruby"> hexo-generator-sitemap</span></div></pre></td></tr></table></figure>

<p><br><br></p>
<h3 id="网站插件">网站插件</h3>
<p><strong>[1]</strong> <strong>Hexo插件</strong> <a href="https://github.com/hexojs/hexo-livereload" target="_blank" rel="external"><strong>Live Reload</strong></a></p>
<p><strong>Hexo</strong>允许在发布之前在<a href="http://localhost:4000" target="_blank" rel="external">本地浏览器</a>进行调试预览，但是如果每次修改都需要反复执行“<strong>$ hexo g &amp;&amp; hexo s</strong>”估计也很崩溃。<strong>Live Reload</strong>给力的地方在于它会自动完成上述步骤，要预览的时候直接<strong>F5</strong>刷新浏览器即可看到修改后的网页效果。当然，如果有时候修改后无法刷新出来的话，那就“<strong>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</strong>”重新来过。</p>
<p><strong>[2]</strong> <strong>流量分析</strong> <a href="http://www.google.com/analytics/" target="_blank" rel="external"><strong>Google Analytics</strong></a></p>
<p>注册<strong>Google Analytics</strong>账号后，获取<strong>跟踪ID</strong>和<strong>跟踪代码</strong>。</p>
<p>在主题的<strong>_config.yml</strong>中添加获得的<strong>跟踪ID</strong>：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">google_analytics:</div><div class="line">  enable: <span class="literal">true</span></div><div class="line">  <span class="keyword">id</span>: UA-<span class="number">51276891</span>-<span class="number">1</span></div><div class="line">  site: baoxiehao<span class="variable">.com</span></div></pre></td></tr></table></figure>

<p>在主题<strong>/layout/_partial/after_footer.ejs</strong>的最后添加获得的<strong>跟踪代码</strong>。</p>
<p><strong>[3]</strong>  <strong>流量分析</strong> <a href="http://tongji.baidu.com" target="_blank" rel="external"><strong>百度统计</strong></a></p>
<p>虽然有了<strong>Google Analytics</strong>，但是时不时地被墙总是一件让人很惆怅的事情。于是，还是加下百度统计吧。</p>
<p>首先，在主题的<strong>_config.yml</strong>文件中添加：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">baidu_tongji</span>: <span class="string">true</span></div></pre></td></tr></table></figure>

<p>然后，在主题的<strong>/layout/_partial/</strong>目录下新建文件<strong>baidu_tongji.ejs</strong>：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="vbscript">&lt;% <span class="keyword">if</span> (theme.baidu_tongji){ %&gt;</span></div><div class="line">#你的百度统计代码</div><div class="line"><span class="vbscript">&lt;% } %&gt;</span></div></pre></td></tr></table></figure>

<p>最后，在主题的<strong>/layout/_partial/head.ejs</strong>文件末尾添加：</p>
<figure class="highlight ejs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="variable">%-</span> partial(<span class="string">'baidu_tongji'</span>) <span class="variable">%&gt;</span></div></pre></td></tr></table></figure>

<p><strong>[4]</strong> <strong>社会化评论</strong> <a href="http://duoshuo.com/" target="_blank" rel="external"><strong>多说</strong></a></p>
<p>首先上多说官网注册账号，然后在主题<strong>/layout/_partial/</strong>下新建文件<a href="http://jimliu.net/2013/09/08/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external"><strong>duoshuo.ejs</strong></a>，内容如下：</p>
<figure class="highlight ejs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- Duoshuo Comment BEGIN --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"ds-thread"</span> <span class="attribute">data-title</span>=<span class="value">"&lt;%= item.title %&gt;"</span> <span class="attribute">data-url</span>=<span class="value">"&lt;%- item.permalink %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> duoshuoQuery = {short_name:<span class="string">"your-duoshuo-name"</span>};</div><div class="line">(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line">    ds.src = <span class="string">'http://static.duoshuo.com/embed.js'</span>;</div><div class="line">    ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]</div><div class="line">    || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">})();</div><div class="line"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- Duoshuo Comment END --&gt;</span></div></pre></td></tr></table></figure>

<p>基本上就是在多说网站上拿到的通用代码，在第二行上加入了<strong>data-title</strong>和<strong>data-url</strong>，用来给多说传一些参数。<br><strong>data-url</strong>这个参数可以让多个域名上的文章评论共享，只要同一篇文章的<strong>data-url</strong>固定就可以。例如<strong>blog.baoxiehao.com</strong>和<strong>baoxiehao.com</strong>上文章的<strong>data-url</strong>都是<strong><a href="http://baoxiehao.com/xxx" target="_blank" rel="external">http://baoxiehao.com/xxx</a></strong>，这样两个域名就可以共享评论了。一定要<strong>注意</strong>第四行的<strong>your-duoshuo_name</strong>是自己多说代码独有的，不要照抄。</p>
<p>接下来在layout/post.ejs下面，加入一行：</p>
<figure class="highlight ejs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%- <span class="keyword">partial</span>(<span class="string">'_partial/duoshuo'</span>, {item: page, index: <span class="keyword">false</span>}) %&gt;</div></pre></td></tr></table></figure>

<p>就能在文章页面看到评论框了。</p>
<p>如果想在其他页面，例如<strong>关于页面</strong>也看到评论的话，对<strong>layout/page.ejs</strong>如法炮制即可。<br>而如果想在博客首页底部也看到评论的话，编辑<strong>freemind/layout/layout.ejs</strong>，在<strong>_partial/after_footer</strong>之前添加<strong>duoshuo</strong>代码（但是，这样有个问题是文章页面会有2个评论框，还没更好的方法，所以暂时先不加首页评论了）：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">  <span class="vbscript">&lt;%- partial(<span class="comment">'_partial/duoshuo', {item: page, index: false}) %&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span> <span class="comment">&lt;!-- container-narrow --&gt;</span></div><div class="line">  <span class="vbscript">&lt;%- partial(<span class="comment">'_partial/after_footer') %&gt;</span></span></div></pre></td></tr></table></figure>

<p><strong>[5]</strong> <a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="external"><strong>七牛同步</strong></a></p>
<p>印象中<strong>Github Pages</strong>是有100M左右的空间大小限制的，如果有更多的图片需要同步，建议选择可以外链的<strong>七牛同步</strong>。在官网注册账号后，新建一个图片空间，然后下载<a href="http://docs.qiniutek.com/v3/tools/qrsync/" target="_blank" rel="external"><strong>qrsync</strong></a>同步本地的图片到七牛，需要时直接在<strong>md文件</strong>中引用。</p>
<p>新建配置文件（比如名为<strong>conf.json</strong>）：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  "<span class="attribute">access_key</span>": <span class="value"><span class="string">"Please apply your access key here"</span></span>,</div><div class="line">  "<span class="attribute">secret_key</span>": <span class="value"><span class="string">"Dont send your secret key to anyone"</span></span>,</div><div class="line">  "<span class="attribute">bucket</span>": <span class="value"><span class="string">"Bucket name on qiniu resource storage"</span></span>,</div><div class="line">  "<span class="attribute">sync_dir</span>": <span class="value"><span class="string">"Local directory to upload"</span></span>,</div><div class="line">  "<span class="attribute">debug_level</span>": <span class="value"><span class="number">1</span></span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>同步命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ qrsync.exe /path/to/your-conf.json</div></pre></td></tr></table></figure>

<p><strong>[6]</strong> <a href="http://open.weibo.com/widgets?cat=wb" target="_blank" rel="external"><strong>新浪微博挂件</strong></a></p>
<p>在主题<strong>/layout/_widget/</strong>下新建文件<strong>weibo.ejs</strong>，文件内容就是生成的微博挂件代码。然后在主题的<strong>_config.yml</strong>文件中添加配置：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">widget<span class="variable">s:</span></div><div class="line">  - weibo</div></pre></td></tr></table></figure>

<p><br><br></p>
<h3 id="FAQ">FAQ</h3>
<ol>
<li>主题的样式无法应用 —— 尝试执行命令<strong>$ hexo clean</strong>后重新部署。</li>
<li>部署后显示中文乱码 —— 尝试将出现乱码的md文件用<strong>UTF-8</strong>重新编码后保存，然后执行<strong>$ hexo clean</strong>重新部署。</li>
<li>升级<strong>Hexo</strong>后执行<strong>$ hexo s</strong>提示<strong>HexoError</strong>错误 —— 修改<strong>themes/freemind/languages/default.yml</strong>中包含空格的配置项，重新用双引号包裹包含空格的配置值就可以啦。</li>
</ol>
]]></content>
    <summary type="html"><![CDATA[<h2 id="MarkDown编辑器">MarkDown编辑器</h2>
<hr>
<p>最低要求：所见所得，云端同步。</p>
<ul>
<li><a href="https://www.zybuluo.com/" target="_blank" rel="external"><strong>Cmd Markdown编辑器</strong></a> —— 本来期待很高，也非常好用，但是反复提示邮箱没有验证，暂时放弃了。</li>
<li><a href="https://stackedit.io/" target="_blank" rel="external"><strong>StackEdit</strong></a> —— 功能基本符合，可以用Google Drive同步，只是预览效果和Hexo最终效果还是有差异，比如代码段的效果，可能是Hexo的代码效果还没配置好。</li>
<li><a href="http://dillinger.io/" target="_blank" rel="external"><strong>Dillinger</strong></a> —— 暂未使用，但是目测还不错，不过貌似网络访问速度比较缓慢。</li>
<li><a href="http://maxiang.info/" target="_blank" rel="external"><strong>马克印象</strong></a> —— Evernote官方出品，值得一试。</li>
</ul>
]]></summary>
    
      <category term="Hexo" scheme="http://baoxiehao.com/tags/Hexo/"/>
    
      <category term="博客" scheme="http://baoxiehao.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android EasyAdapter]]></title>
    <link href="http://baoxiehao.com/2014/05/16/Android-Easyadapter/"/>
    <id>http://baoxiehao.com/2014/05/16/Android-Easyadapter/</id>
    <published>2014-05-16T11:55:23.000Z</published>
    <updated>2014-05-23T10:51:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="EasyAdapter的安装">EasyAdapter的安装</h2>
<hr>
<p><strong>[1]</strong> <a href="#1"><strong>Github地址</strong></a> 和 <a href="#2"><strong>Jar包下载地址</strong></a>。</p>
<p><strong>[2]</strong> 如果在源码编译中引用<strong>jar包</strong>需要在项目的<strong>Android.mk</strong>中添加：</p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="constant">LOCAL_STATIC_JAVA_LIBRARIES</span> += easy-adapter</div><div class="line"><span class="constant">LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES</span> += easy-adapter:libs/easyadapter-1.0.1.jar</div></pre></td></tr></table></figure>

<p><strong>[3]</strong> 如果使用了代码混淆，一定要在proguard.flags文件中去掉对easy-adapter代码包的混淆：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-keep <span class="keyword">public</span> <span class="keyword">class</span> uk.co.ribot.easyadapter.** {</div><div class="line">    <span class="keyword">public</span> <span class="keyword">protected</span> *;</div><div class="line">}</div></pre></td></tr></table></figure>

<a id="more"></a>

<p><br></p>
<h2 id="EasyAdapter的使用">EasyAdapter的使用</h2>
<hr>
<h3 id="使用EasyAdapter之前">使用EasyAdapter之前</h3>
<p>自定义一个BaseAdapter，包含了下面繁琐的模板代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">TopicDetailAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> </span>{</div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span>() {</div><div class="line">        <span class="keyword">return</span> mEventList != <span class="keyword">null</span> ? mEventList.size() : <span class="number">0</span>;</div><div class="line">    }</div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> Object <span class="title">getItem</span>(<span class="keyword">int</span> position) {</div><div class="line">        <span class="keyword">return</span> mEventList.get(position);</div><div class="line">    }</div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span>(<span class="keyword">int</span> position) {</div><div class="line">        <span class="keyword">return</span> position;</div><div class="line">    }</div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span>(<span class="keyword">int</span> position) {</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    }</div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> View <span class="title">getView</span>(<span class="keyword">int</span> position, View convertView, ViewGroup parent) {</div><div class="line">        ViewHolder holder = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">if</span> (convertView == <span class="keyword">null</span>) {</div><div class="line">            convertView = LayoutInflater.from(mActivity).inflate(</div><div class="line">                    R.layout.event_online_item, <span class="keyword">null</span>);</div><div class="line">            holder = <span class="keyword">new</span> ViewHolder(convertView);</div><div class="line">            convertView.setTag(holder);</div><div class="line">        } <span class="keyword">else</span> {</div><div class="line">            holder = (ViewHolder) convertView.getTag();</div><div class="line">        }</div><div class="line">        <span class="keyword">final</span> EventSchema event = mEventList.get(position);</div><div class="line">        holder.mHeaderText.setText(R.string.topic_event_list_header_label);</div><div class="line">        holder.mHeaderText.setVisibility(position == <span class="number">0</span> ? View.VISIBLE : View.GONE);</div><div class="line">        holder.mPrimaryText.setText(event.title);</div><div class="line">        holder.mSecondaryText.setText(MonthUtils.getEventTimeString(mActivity, event,</div><div class="line">                Time.getCurrentTimezone()));</div><div class="line">        String url = event.getEventIconUrl();</div><div class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(url)) {</div><div class="line">            holder.mOnlineImage.setVisibility(View.VISIBLE);</div><div class="line">            holder.mOnlineImage.setImageUrl(url, R.drawable.loading, R.drawable.loading);</div><div class="line">        } <span class="keyword">else</span> {</div><div class="line">            holder.mOnlineImage.setVisibility(View.GONE);</div><div class="line">        }</div><div class="line">        <span class="keyword">return</span> convertView;</div><div class="line">    }</div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> </span>{</div><div class="line">        <span class="keyword">public</span> TextView mHeaderText;</div><div class="line">        <span class="keyword">public</span> ViewGroup mRowGroup;</div><div class="line">        <span class="keyword">public</span> TextView mPrimaryText;</div><div class="line">        <span class="keyword">public</span> TextView mSecondaryText;</div><div class="line">        <span class="keyword">public</span> OnlineImageView mOnlineImage;</div><div class="line">        <span class="keyword">public</span> <span class="title">ViewHolder</span>(View view) {</div><div class="line">            mHeaderText = (TextView) view.findViewById(R.id.header);</div><div class="line">            mRowGroup = (ViewGroup) view.findViewById(R.id.row);</div><div class="line">            mPrimaryText = (TextView) view.findViewById(R.id.primary);</div><div class="line">            mSecondaryText = (TextView) view.findViewById(R.id.secondary);</div><div class="line">            mOnlineImage = (OnlineImageView) view.findViewById(R.id.online_image);</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>利用自定义的BaseAdapter继承类填充List数据：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getListView().setAdapter(<span class="keyword">new</span> TopicDetailAdapter());</div></pre></td></tr></table></figure>

<p><br></p>
<h3 id="使用EasyAdapter之后">使用EasyAdapter之后</h3>
<p>继承自ItemViewHolder<t>关联数据和视图：</t></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TopicItemViewHolder</span> <span class="keyword">extends</span> <span class="title">ItemViewHolder</span>&lt;<span class="title">EventSchema</span>&gt; </span>{</div><div class="line">    <span class="annotation">@ViewId</span>(R.id.header)</div><div class="line">    TextView mHeaderText;</div><div class="line">    <span class="annotation">@ViewId</span>(R.id.row)</div><div class="line">    ViewGroup mRowGroup;</div><div class="line">    <span class="annotation">@ViewId</span>(R.id.primary)</div><div class="line">    TextView mPrimaryText;</div><div class="line">    <span class="annotation">@ViewId</span>(R.id.secondary)</div><div class="line">    TextView mSecondaryText;</div><div class="line">    <span class="annotation">@ViewId</span>(R.id.online_image)</div><div class="line">    OnlineImageView mOnlineImage;</div><div class="line">    <span class="keyword">public</span> <span class="title">TopicItemViewHolder</span>(View view) {</div><div class="line">        <span class="keyword">super</span>(view);</div><div class="line">    }</div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSetValues</span>(EventSchema event, PositionInfo posInfo) {</div><div class="line">        mHeaderText.setText(R.string.topic_event_list_header_label);</div><div class="line">        mHeaderText.setVisibility(posInfo.isFirst() ? View.VISIBLE : View.GONE);</div><div class="line">        mPrimaryText.setText(event.title);</div><div class="line">        mSecondaryText.setText(MonthUtils.getEventTimeString(getContext(), event,</div><div class="line">                Time.getCurrentTimezone()));</div><div class="line">        String url = event.getEventIconUrl();</div><div class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(url)) {</div><div class="line">            mOnlineImage.setVisibility(View.VISIBLE);</div><div class="line">            mOnlineImage.setImageUrl(url, R.drawable.loading, R.drawable.loading);</div><div class="line">        } <span class="keyword">else</span> {</div><div class="line">            mOnlineImage.setVisibility(View.GONE);</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>利用EasyAdapter<t>模板类直接填充List数据：</t></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getListView().setAdapter(<span class="keyword">new</span> EasyAdapter&lt;EventSchema&gt;(getContext(), TopicItemViewHolder.class, mEventList);</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<h2 id="EasyAdapter的安装">EasyAdapter的安装</h2>
<hr>
<p><strong>[1]</strong> <a href="#1"><strong>Github地址</strong></a> 和 <a href="#2"><strong>Jar包下载地址</strong></a>。</p>
<p><strong>[2]</strong> 如果在源码编译中引用<strong>jar包</strong>需要在项目的<strong>Android.mk</strong>中添加：</p>
<figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="constant">LOCAL_STATIC_JAVA_LIBRARIES</span> += easy-adapter</div><div class="line"><span class="constant">LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES</span> += easy-adapter:libs/easyadapter-1.0.1.jar</div></pre></td></tr></table></figure>

<p><strong>[3]</strong> 如果使用了代码混淆，一定要在proguard.flags文件中去掉对easy-adapter代码包的混淆：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-keep <span class="keyword">public</span> <span class="keyword">class</span> uk.co.ribot.easyadapter.** {</div><div class="line">    <span class="keyword">public</span> <span class="keyword">protected</span> *;</div><div class="line">}</div></pre></td></tr></table></figure>

]]></summary>
    
      <category term="Android" scheme="http://baoxiehao.com/tags/Android/"/>
    
      <category term="技术" scheme="http://baoxiehao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客首文]]></title>
    <link href="http://baoxiehao.com/2014/05/13/Hexo%E5%8D%9A%E5%AE%A2%E9%A6%96%E6%96%87/"/>
    <id>http://baoxiehao.com/2014/05/13/Hexo博客首文/</id>
    <published>2014-05-13T12:55:50.000Z</published>
    <updated>2014-08-10T05:00:31.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><a href="http://hexo.io" target="_blank" rel="external">Hexo</a>博客很有逼格! 参考<a href="http://hexo.io/docs" target="_blank" rel="external">Hexo文档</a>学习更多。</p>
</blockquote>
<h2 id="搭建步骤">搭建步骤</h2>
<hr>
<p><strong>[1]</strong> 进入<a href="http://www.godaddy.com/" target="_blank" rel="external">Godadday</a>首页（注册登录）后搜索想要的域名并购买，网络上可以搜索到Godaddy优惠券（最好选择支持<strong>支付宝</strong>支付的更加便捷）。博主花费了50多刀注册了5年的个人域名。</p>
<p><strong>[2]</strong> 进入<a href="http://www.dnspod.cn/" target="_blank" rel="external">DNSpod</a>首页（注册登录）后点击“添加域名”，记录生成的2个DNS服务器。</p>
<a id="more"></a>

<p><img src="/imgs/dnspod.jpg" alt=""><br><img src="/imgs/dnspod-server-name.jpg" alt=""></p>
<p><strong>[3]</strong> <strong>重新登录</strong><a href="http://www.godaddy.com/" target="_blank" rel="external">Godaddy</a>，在<strong>Domain</strong>页面<strong>Launch</strong>刚刚注册的域名地址，然后添加刚刚在<a href="http://www.dnspod.cn/" target="_blank" rel="external">DNSpod</a>生成的2个DNS服务器。<br><img src="/imgs/godaddy.jpg" alt=""><br><img src="/imgs/godaddy-server-name.jpg" alt=""></p>
<p><strong>[4]</strong> 回到<a href="http://www.dnspod.cn/" target="_blank" rel="external">DNSpod</a>，点击在<a href="http://www.godaddy.com/" target="_blank" rel="external">Godaddy</a>注册的个人域名，添加2个记录，其<strong>主机记录</strong>分别是<strong>@</strong>和<strong>www</strong>（这样个人域名前有没有加<strong>www</strong>应该都可以访问到），<strong>记录类型</strong>选择<strong>CNAME</strong>，<strong>记录值</strong>都选择下一个步骤在<a href="https://github.com/" target="_blank" rel="external">Github</a>上创建的<strong>Github Pages</strong>链接地址（<a href="baoxiehao.github.io">博主Github Pages</a>）。<br><img src="/imgs/dnspod-hosts.jpg" alt=""></p>
<p><strong>[5]</strong> 进入<a href="baoxiehao.github.io">Github</a>首页（注册登录），在右上角<strong>+</strong>处选择<strong>New Repository</strong>新建Github Pages对应的仓库项目，项目名称<strong>一定</strong>是要和Github的<strong>个人账户名字</strong>相同！输入完成后，点击<strong>Create Repository</strong>完成创建（博主是因为已经创建过了所以提示已经存在）。<br><img src="/imgs/github-new-repo.jpg" alt=""><br><img src="/imgs/github-new-repo-addr.jpg" alt=""></p>
<p><strong>[6]</strong> <strong>Github Pages</strong>项目创建完成后，需要在项目中新建一个<strong>CNAME</strong>的文件，文件内容是刚刚在<a href="http://www.godaddy.com/" target="_blank" rel="external">Godaddy</a>注册的个人域名地址。方便起见可以在项目详情右下角点击<strong>Add a README</strong>，然后修改文件名称和文件内容，最后在右下角点击<strong>Commit new file</strong>即可。<br><img src="/imgs/github-cname.jpg" alt=""><br><img src="/imgs/github-cname-text.jpg" alt=""><br><img src="/imgs/github-cname-commit.jpg" alt=""></p>
<p><strong>[7]</strong> <a href="https://help.github.com/articles/generating-ssh-keys" target="_blank" rel="external"><strong>配置SSH KEY</strong></a></p>
<p><img src="/imgs/ssh-keygen.jpg" alt=""><br><img src="/imgs/ssh-github.jpg" alt=""></p>
<p><strong>[8]</strong> 安装<a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>和<a href="http://git-scm.com/" target="_blank" rel="external">Git</a>。</p>
<p><strong>[9]</strong> 安装<a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div><div class="line">$ mkdir ~/hexo</div><div class="line">$ <span class="built_in">cd</span> hexo</div><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure>

<p><strong>[10]</strong> <strong>hexo</strong>安装完成后，修改<strong>hexo</strong>根目录下的配置文件<strong>_config.yml</strong>：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="class"><span class="keyword">type</span>: <span class="title">github</span></span></div><div class="line">  repository: https:<span class="comment">//github.com/baoxiehao/baoxiehao.github.io.git</span></div></pre></td></tr></table></figure>

<p><br></p>
<h2 id="编写博文">编写博文</h2>
<hr>
<p><strong>折腾了这么久，终于可以创建属于你自己的个人博客文章了，心里是不是有点小激动呢！</strong></p>
<p><strong>[1]</strong> <strong>新建博客</strong>，在开始菜单启动<strong>Git Bash</strong>（会在当前目录下创建<strong>folder-name</strong>的文件夹作为博客目录，可以用百度云之类进行云同步）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init folder-name</div></pre></td></tr></table></figure>

<p><strong>[2]</strong> <strong>新建文章</strong>（会在hexo目录下的source/_post新建名为<strong>title-name.md</strong>的文件，用<strong>Sublime Text</strong>（任意你喜欢的编辑器，当然我喜欢<strong>Sublime</strong>）打开就可以用<a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">MarkDown</a>语法写文章了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new title-name</div></pre></td></tr></table></figure>

<p><strong>[3]</strong> <strong>预览文章</strong>，文章写完后在<a href="http://localhost:4000" target="_blank" rel="external">本地</a>即可预览博客文章：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server (或者 hexo s)</div></pre></td></tr></table></figure>

<p><strong>[4]</strong> <strong>发布文章</strong>，预览没有问题，就可以发布到<strong>Github Pages</strong>上面了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate (或者 hexo g)</div><div class="line">$ hexo deploy (或者 hexo d)</div></pre></td></tr></table></figure>

<p>或者一个命令一步到位：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g <span class="operator">-d</span></div></pre></td></tr></table></figure>

<p><strong>[5]</strong> 最后根据提示信息，输入<strong>Github</strong>账号密码，等待若干秒就大功告成了：</p>
<p><img src="/imgs/github-push.jpg" alt=""></p>
<p><br><br></p>
<h2 id="更换电脑注意事项">更换电脑注意事项</h2>
<p>更换电脑编写博文的话，首先要将原电脑上的<strong>ssh key</strong>拷贝到新电脑上，然后执行命令添加<strong>ssh key</strong>。在<strong>hexo</strong>根目录<strong>Git Bash</strong>执行命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ssh-agent bash</div><div class="line">$ ssh-add /c/User/Thinkpad/.ssh/id_rsa</div><div class="line">$ ssh-add <span class="operator">-l</span></div></pre></td></tr></table></figure>

<p>如果执行<strong>hexo deploy</strong>的时候提示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fatal: <span class="string">'github'</span> does not appear to be a git repository</div><div class="line">fatal: Could not <span class="built_in">read</span> from remote repository</div></pre></td></tr></table></figure>

<p>那么删除<strong>hexo</strong>根目录下的<strong>.deploy</strong>目录重新<strong>hexo g</strong>试试。</p>
<p><br><br></p>
<h2 id="参考链接">参考链接</h2>
<hr>
<ol>
<li><a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://code.wileam.com/build-a-hexo-blog-and-optimize/" target="_blank" rel="external">hexo搭建静态博客以及优化</a></li>
<li><a href="http://jingyan.baidu.com/article/358570f6198a9ece4724fcf7.html" target="_blank" rel="external">Godaddy域名使用DNSPod做DNS解析图文教程</a></li>
<li><a href="http://bbs.baoxianwangluo.com/thread-167961-1-1.html" target="_blank" rel="external">怎样在Dnspod添加CNAME记录解析</a></li>
<li><a href="https://github.com/tommy351/hexo/issues/67" target="_blank" rel="external"><strong>Hexo deploy</strong>发布不成功</a></li>
</ol>
]]></content>
    <summary type="html"><![CDATA[<blockquote>
<p><a href="http://hexo.io" target="_blank" rel="external">Hexo</a>博客很有逼格! 参考<a href="http://hexo.io/docs" target="_blank" rel="external">Hexo文档</a>学习更多。</p>
</blockquote>
<h2 id="搭建步骤">搭建步骤</h2>
<hr>
<p><strong>[1]</strong> 进入<a href="http://www.godaddy.com/" target="_blank" rel="external">Godadday</a>首页（注册登录）后搜索想要的域名并购买，网络上可以搜索到Godaddy优惠券（最好选择支持<strong>支付宝</strong>支付的更加便捷）。博主花费了50多刀注册了5年的个人域名。</p>
<p><strong>[2]</strong> 进入<a href="http://www.dnspod.cn/" target="_blank" rel="external">DNSpod</a>首页（注册登录）后点击“添加域名”，记录生成的2个DNS服务器。</p>
]]></summary>
    
      <category term="Hexo" scheme="http://baoxiehao.com/tags/Hexo/"/>
    
      <category term="博客" scheme="http://baoxiehao.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
